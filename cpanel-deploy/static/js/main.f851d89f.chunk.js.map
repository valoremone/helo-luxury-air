{"version":3,"sources":["features/shared/auth/authSlice.ts","store/index.ts","layouts/member/MemberLayout.tsx","layouts/admin/AdminLayout.tsx","layouts/shared/AuthLayout.tsx","services/bookingService.ts","services/userService.ts","pages/member/Dashboard.tsx","services/fleetService.ts","pages/member/Booking.tsx","pages/member/Profile.tsx","pages/member/Trips.tsx","pages/member/TripDetails.tsx","pages/admin/Dashboard.tsx","pages/admin/BookingsManagement.tsx","pages/admin/UserManagement.tsx","pages/admin/FleetManagement.tsx","pages/admin/Analytics.tsx","pages/shared/Login.tsx","pages/shared/Register.tsx","pages/shared/ForgotPassword.tsx","components/shared/ProtectedRoute.tsx","pages/shared/NotFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["guestAccount","id","email","firstName","lastName","role","password","memberAccount","membershipTier","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","login","createAsyncThunk","async","credentials","_ref","rejectWithValue","guestUser","guestToken","setItem","memberUser","memberToken","Promise","resolve","setTimeout","mockUser","mockToken","logout","removeItem","register","userData","_ref2","authSlice","createSlice","name","reducers","setCredentials","state","_ref3","payload","clearCredentials","extraReducers","builder","addCase","pending","fulfilled","_ref4","rejected","action","_ref5","actions","selectCurrentUser","auth","selectIsAuthenticated","selectAuthLoading","selectAuthError","store","configureStore","reducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useDispatch","useAppSelector","useSelector","HomeIcon","className","React","createElement","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","CalendarIcon","AirplaneIcon","UserIcon","LogoutIcon","_ref6","MenuIcon","_ref7","XIcon","_ref8","SunIcon","_ref9","MoonIcon","_ref10","ChevronDownIcon","_ref11","MemberLayout","darkMode","toggleDarkMode","location","useLocation","navigate","useNavigate","dispatch","currentUser","mobileMenuOpen","setMobileMenuOpen","useState","userMenuOpen","setUserMenuOpen","handleLogout","navigation","href","icon","isActive","path","pathname","onClick","type","map","item","Link","key","to","Outlet","DashboardIcon","BookingIcon","UsersIcon","FleetIcon","AnalyticsIcon","SwitchIcon","_ref12","_ref13","_ref14","AdminLayout","AuthLayout","useEffect","mockLocations","address","coordinates","latitude","longitude","mockBookings","userId","pickupLocation","dropoffLocation","departureDate","departureTime","passengerCount","specialRequests","addOns","groundTransportation","catering","status","price","createdAt","updatedAt","bookingService","getLocations","console","getUserBookings","userBookings","filter","booking","getRecentBookings","limit","arguments","length","undefined","sortedBookings","sort","a","b","Date","getTime","slice","getAllBookings","getBookingById","find","createBooking","newBooking","bookingData","toISOString","push","updateBooking","reject","bookingIndex","findIndex","Error","updatedBooking","cancelBooking","cancelledBooking","mockUserProfile","phoneNumber","street","city","zipCode","country","emergencyContact","relationship","preferences","notifications","marketingEmails","paymentMethods","lastFour","expiryDate","isDefault","cardBrand","savedLocations","mockUsers","userService","getAllUsers","getUserProfile","updateUserProfile","profileData","updatedProfile","addPaymentMethod","paymentData","_mockUserProfile$paym","_mockUserProfile$paym2","newPaymentMethod","removePaymentMethod","paymentMethodId","method","addSavedLocation","locationData","_mockUserProfile$save","_mockUserProfile$save2","newLocation","removeSavedLocation","locationId","getSavedLocations","Dashboard","upcomingTrips","setUpcomingTrips","setSavedLocations","setIsLoading","upcoming","trip","userProfile","fetchData","htmlFor","defaultValue","value","disabled","min","split","num","cx","cy","r","toLocaleDateString","weekday","month","day","charAt","toUpperCase","mockHelicopters","make","model","year","capacity","imageUrl","features","lastMaintenance","nextMaintenance","range","cruiseSpeed","maxAltitude","pilotIds","mockGroundVehicles","licensePlate","driverIds","fleetService","getHelicopters","getHelicopterById","helicopter","h","getGroundVehicles","getGroundVehicleById","vehicle","v","updateVehicleStatus","vehicleType","index","scheduleMaintenance","maintenanceDate","BookingPage","_savedLocations$find","_savedLocations$find2","_helicopters$find","step","setStep","helicopters","setHelicopters","loading","setLoading","setBookingData","date","time","passengers","helicopterId","addGroundTransport","notes","locations","helicopterData","handleInputChange","e","target","checked","[object Object]","nextStep","prevStep","onSubmit","preventDefault","pickup","loc","dropoff","onChange","required","max","placeholder","ProfilePage","isEditing","setIsEditing","formData","setFormData","phone","handleEmergencyContactChange","log","TripsPage","trips","setTrips","activeTab","setActiveTab","allTrips","fetchTrips","pastTrips","formatDate","dateString","getStatusColor","Fragment","toFixed","TripDetailsPage","_booking$addOns","_booking$addOns2","_booking$addOns3","useParams","setBooking","setHelicopter","setError","err","fetchTripDetails","toLocaleString","conciergeService","src","alt","feature","AdminDashboard","stats","setStats","totalBookingsToday","pendingBookings","activeFleet","totalRevenue","recentBookings","setRecentBookings","fleetStatus","setFleetStatus","vehicles","bookings","helicopterStatus","calculateFleetStatus","vehicleStatus","reduce","sum","fetchDashboardData","statusArray","statusCount","forEach","Object","entries","count","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatCurrency","scope","hour","minute","replace","BookingsManagement","setBookings","filteredBookings","setFilteredBookings","statusFilter","setStatusFilter","dateFilter","setDateFilter","data","fetchBookings","result","UserManagement","users","setUsers","filteredUsers","setFilteredUsers","membershipFilter","setMembershipFilter","searchQuery","setSearchQuery","fetchUsers","query","toLowerCase","includes","getMembershipColor","tier","FleetManagement","setVehicles","vehicleData","fetchFleet","AnalyticsPage","analyticsData","setAnalyticsData","timeRange","setTimeRange","totalBookings","activeUsers","fleetUtilization","bookingsByStatus","confirmed","cancelled","completed","revenueByMonth","revenue","popularRoutes","route","membershipDistribution","fetchAnalyticsData","handleTimeRangeChange","width","height","Login","_ref$from","showPassword","setShowPassword","showCredentialsNotice","setShowCredentialsNotice","from","handleSubmit","formState","errors","useForm","defaultValues","rememberMe","resultAction","match","assign","autoComplete","pattern","message","minLength","fillRule","clipRule","aria-hidden","RegisterPage","confirmPassword","agreeToTerms","setErrors","isSubmitting","setIsSubmitting","handleChange","form","validateForm","newErrors","trim","test","keys","ForgotPasswordPage","setEmail","success","setSuccess","ProtectedRoute","children","allowedRoles","Navigate","NotFound","App","setDarkMode","document","documentElement","classList","add","remove","toString","Provider","Router","Routes","Route","element","LoginPage","MemberDashboard","NotFoundPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f851d89f.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../../store';\n\n// Define types\nexport interface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: 'member' | 'admin' | 'guest';\n  membershipTier?: 'standard' | 'premium' | 'elite';\n}\n\n// Default Guest account\nconst guestAccount = {\n  id: 'guest-1',\n  email: 'guest@flyhelo.one',\n  firstName: 'Guest',\n  lastName: 'User',\n  role: 'guest' as const,\n  password: 'guest123' // In a real app, this would be hashed\n};\n\n// Default Member account\nconst memberAccount = {\n  id: 'member-1',\n  email: 'member@flyhelo.one',\n  firstName: 'Standard',\n  lastName: 'Member',\n  role: 'member' as const,\n  membershipTier: 'standard' as const,\n  password: 'member123' // In a real app, this would be hashed\n};\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\n// Initial state\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  isLoading: false,\n  error: null,\n};\n\n// Async thunks\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (credentials: { email: string; password: string }, { rejectWithValue }) => {\n    try {\n      // Check if the credentials match the guest account\n      if (credentials.email === guestAccount.email && credentials.password === guestAccount.password) {\n        const { password, ...guestUser } = guestAccount;\n        const guestToken = 'guest-jwt-token';\n        \n        // Store token in localStorage\n        localStorage.setItem('token', guestToken);\n        \n        return { user: guestUser, token: guestToken };\n      }\n      \n      // Check if the credentials match the member account\n      if (credentials.email === memberAccount.email && credentials.password === memberAccount.password) {\n        const { password, ...memberUser } = memberAccount;\n        const memberToken = 'member-jwt-token';\n        \n        // Store token in localStorage\n        localStorage.setItem('token', memberToken);\n        \n        return { user: memberUser, token: memberToken };\n      }\n      \n      // This would be an actual API call in a real application\n      // For now, we'll simulate a successful login with mock data\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const mockUser: User = {\n        id: '1',\n        email: credentials.email,\n        firstName: 'John',\n        lastName: 'Doe',\n        role: 'member',\n        membershipTier: 'premium',\n      };\n      \n      const mockToken = 'mock-jwt-token';\n      \n      // Store token in localStorage\n      localStorage.setItem('token', mockToken);\n      \n      return { user: mockUser, token: mockToken };\n    } catch (error) {\n      return rejectWithValue('Invalid credentials');\n    }\n  }\n);\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('token');\n  return null;\n});\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (userData: { email: string; password: string; firstName: string; lastName: string }, { rejectWithValue }) => {\n    try {\n      // Prevent registration with the guest email\n      if (userData.email === guestAccount.email || userData.email === memberAccount.email) {\n        return rejectWithValue('This email is already registered');\n      }\n      \n      // This would be an actual API call in a real application\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const mockUser: User = {\n        id: '2',\n        email: userData.email,\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        role: 'member',\n        membershipTier: 'standard',\n      };\n      \n      const mockToken = 'mock-jwt-token-new-user';\n      \n      // Store token in localStorage\n      localStorage.setItem('token', mockToken);\n      \n      return { user: mockUser, token: mockToken };\n    } catch (error) {\n      return rejectWithValue('Registration failed');\n    }\n  }\n);\n\n// Create slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (\n      state,\n      { payload: { user, token } }: PayloadAction<{ user: User; token: string }>\n    ) => {\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n    },\n    clearCredentials: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = payload.user;\n        state.token = payload.token;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n      })\n      // Logout\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n      })\n      // Register\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(register.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = payload.user;\n        state.token = payload.token;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport const { setCredentials, clearCredentials } = authSlice.actions;\n\nexport default authSlice.reducer;\n\nexport const selectCurrentUser = (state: RootState) => state.auth.user;\nexport const selectIsAuthenticated = (state: RootState) => state.auth.isAuthenticated;\nexport const selectAuthLoading = (state: RootState) => state.auth.isLoading;\nexport const selectAuthError = (state: RootState) => state.auth.error; ","import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport authReducer from '../features/shared/auth/authSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    // Add more reducers here as needed\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector; ","import React, { useState } from 'react';\nimport { Outlet, Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { logout, selectCurrentUser } from '../../features/shared/auth/authSlice';\n\ninterface MemberLayoutProps {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst MemberLayout: React.FC<MemberLayoutProps> = ({ darkMode, toggleDarkMode }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const currentUser = useAppSelector(selectCurrentUser);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [userMenuOpen, setUserMenuOpen] = useState(false);\n  \n  const handleLogout = async () => {\n    await dispatch(logout());\n    navigate('/login');\n  };\n  \n  const navigation = [\n    { name: 'Dashboard', href: '/member/dashboard', icon: HomeIcon },\n    { name: 'Book a Flight', href: '/member/booking', icon: CalendarIcon },\n    { name: 'My Trips', href: '/member/trips', icon: AirplaneIcon },\n    { name: 'Profile', href: '/member/profile', icon: UserIcon },\n  ];\n  \n  const isActive = (path: string) => {\n    return location.pathname === path;\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-light dark:bg-primary\">\n      {/* Mobile menu */}\n      <div className={`fixed inset-0 z-40 lg:hidden ${mobileMenuOpen ? 'block' : 'hidden'}`}>\n        <div className=\"fixed inset-0 bg-black/50\" onClick={() => setMobileMenuOpen(false)}></div>\n        <div className=\"fixed inset-y-0 left-0 w-64 bg-white dark:bg-secondary shadow-lg\">\n          <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"text-xl font-bold text-primary dark:text-accent\">HELO</div>\n            <button\n              type=\"button\"\n              className=\"text-gray-500 dark:text-gray-400\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <XIcon className=\"w-6 h-6\" />\n            </button>\n          </div>\n          <nav className=\"mt-4 px-2 space-y-1\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                to={item.href}\n                className={`flex items-center px-4 py-2 text-sm font-medium rounded-md ${\n                  isActive(item.href)\n                    ? 'bg-gray-100 dark:bg-tertiary text-primary dark:text-accent'\n                    : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-tertiary/50'\n                }`}\n                onClick={() => setMobileMenuOpen(false)}\n              >\n                <item.icon\n                  className={`mr-3 h-5 w-5 ${\n                    isActive(item.href)\n                      ? 'text-primary dark:text-accent'\n                      : 'text-gray-500 dark:text-gray-400'\n                  }`}\n                />\n                {item.name}\n              </Link>\n            ))}\n          </nav>\n        </div>\n      </div>\n      \n      {/* Desktop sidebar */}\n      <div className=\"hidden lg:fixed lg:inset-y-0 lg:flex lg:w-64 lg:flex-col\">\n        <div className=\"flex flex-col flex-grow bg-white dark:bg-secondary shadow\">\n          <div className=\"flex items-center h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"text-xl font-bold text-primary dark:text-accent\">HELO</div>\n          </div>\n          <div className=\"flex flex-col flex-grow pt-5 pb-4 overflow-y-auto\">\n            <nav className=\"flex-1 px-2 space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`flex items-center px-4 py-2 text-sm font-medium rounded-md ${\n                    isActive(item.href)\n                      ? 'bg-gray-100 dark:bg-tertiary text-primary dark:text-accent'\n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-tertiary/50'\n                  }`}\n                >\n                  <item.icon\n                    className={`mr-3 h-5 w-5 ${\n                      isActive(item.href)\n                        ? 'text-primary dark:text-accent'\n                        : 'text-gray-500 dark:text-gray-400'\n                    }`}\n                  />\n                  {item.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n          <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\n            <button\n              type=\"button\"\n              className=\"flex items-center px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-tertiary/50\"\n              onClick={handleLogout}\n            >\n              <LogoutIcon className=\"mr-3 h-5 w-5 text-gray-500 dark:text-gray-400\" />\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Main content */}\n      <div className=\"lg:pl-64\">\n        <div className=\"sticky top-0 z-10 flex items-center justify-between h-16 px-4 bg-white dark:bg-secondary shadow-sm\">\n          {/* Mobile menu button */}\n          <button\n            type=\"button\"\n            className=\"lg:hidden text-gray-500 dark:text-gray-400\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <MenuIcon className=\"h-6 w-6\" />\n          </button>\n          \n          {/* Right side of navbar */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Dark mode toggle */}\n            <button\n              type=\"button\"\n              className=\"text-gray-500 dark:text-gray-400\"\n              onClick={toggleDarkMode}\n            >\n              {darkMode ? (\n                <SunIcon className=\"h-6 w-6\" />\n              ) : (\n                <MoonIcon className=\"h-6 w-6\" />\n              )}\n            </button>\n            \n            {/* User dropdown */}\n            <div className=\"relative\">\n              <button\n                type=\"button\"\n                className=\"flex items-center space-x-2\"\n                onClick={() => setUserMenuOpen(!userMenuOpen)}\n              >\n                <div className=\"h-8 w-8 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center\">\n                  <UserIcon className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n                </div>\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                  {currentUser?.firstName} {currentUser?.lastName}\n                </span>\n                <ChevronDownIcon className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n              </button>\n              \n              {userMenuOpen && (\n                <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-tertiary rounded-md shadow-lg py-1\">\n                  <Link\n                    to=\"/member/profile\"\n                    className=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-secondary\"\n                    onClick={() => setUserMenuOpen(false)}\n                  >\n                    Your Profile\n                  </Link>\n                  <button\n                    type=\"button\"\n                    className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-secondary\"\n                    onClick={() => {\n                      setUserMenuOpen(false);\n                      handleLogout();\n                    }}\n                  >\n                    Logout\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* Page content */}\n        <main className=\"p-4 sm:p-6 lg:p-8\">\n          <Outlet />\n        </main>\n      </div>\n    </div>\n  );\n};\n\n// Icons\nconst HomeIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n  </svg>\n);\n\nconst CalendarIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n  </svg>\n);\n\nconst AirplaneIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n  </svg>\n);\n\nconst UserIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n  </svg>\n);\n\nconst LogoutIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n  </svg>\n);\n\nconst MenuIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n  </svg>\n);\n\nconst XIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n  </svg>\n);\n\nconst SunIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n  </svg>\n);\n\nconst MoonIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n  </svg>\n);\n\nconst ChevronDownIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n  </svg>\n);\n\nexport default MemberLayout; ","import React, { useState } from 'react';\nimport { Outlet, Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { logout, selectCurrentUser } from '../../features/shared/auth/authSlice';\n\ninterface AdminLayoutProps {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst AdminLayout: React.FC<AdminLayoutProps> = ({ darkMode, toggleDarkMode }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const currentUser = useAppSelector(selectCurrentUser);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [userMenuOpen, setUserMenuOpen] = useState(false);\n  \n  const handleLogout = async () => {\n    await dispatch(logout());\n    navigate('/login');\n  };\n  \n  const navigation = [\n    { name: 'Dashboard', href: '/admin/dashboard', icon: DashboardIcon },\n    { name: 'Bookings', href: '/admin/bookings', icon: BookingIcon },\n    { name: 'Users', href: '/admin/users', icon: UsersIcon },\n    { name: 'Fleet', href: '/admin/fleet', icon: FleetIcon },\n    { name: 'Analytics', href: '/admin/analytics', icon: AnalyticsIcon },\n  ];\n  \n  const isActive = (path: string) => {\n    return location.pathname === path;\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-light dark:bg-primary\">\n      {/* Mobile menu */}\n      <div className={`fixed inset-0 z-40 lg:hidden ${mobileMenuOpen ? 'block' : 'hidden'}`}>\n        <div className=\"fixed inset-0 bg-black/50\" onClick={() => setMobileMenuOpen(false)}></div>\n        <div className=\"fixed inset-y-0 left-0 w-64 bg-white dark:bg-secondary shadow-lg\">\n          <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"text-xl font-bold text-primary dark:text-accent\">HELO ADMIN</div>\n            <button\n              type=\"button\"\n              className=\"text-gray-500 dark:text-gray-400\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <XIcon className=\"w-6 h-6\" />\n            </button>\n          </div>\n          <nav className=\"mt-4 px-2 space-y-1\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                to={item.href}\n                className={`flex items-center px-4 py-2 text-sm font-medium rounded-md ${\n                  isActive(item.href)\n                    ? 'bg-gray-100 dark:bg-tertiary text-primary dark:text-accent'\n                    : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-tertiary/50'\n                }`}\n                onClick={() => setMobileMenuOpen(false)}\n              >\n                <item.icon\n                  className={`mr-3 h-5 w-5 ${\n                    isActive(item.href)\n                      ? 'text-primary dark:text-accent'\n                      : 'text-gray-500 dark:text-gray-400'\n                  }`}\n                />\n                {item.name}\n              </Link>\n            ))}\n          </nav>\n        </div>\n      </div>\n      \n      {/* Desktop sidebar */}\n      <div className=\"hidden lg:fixed lg:inset-y-0 lg:flex lg:w-64 lg:flex-col\">\n        <div className=\"flex flex-col flex-grow bg-white dark:bg-secondary shadow\">\n          <div className=\"flex items-center h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"text-xl font-bold text-primary dark:text-accent\">HELO ADMIN</div>\n          </div>\n          <div className=\"flex flex-col flex-grow pt-5 pb-4 overflow-y-auto\">\n            <nav className=\"flex-1 px-2 space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`flex items-center px-4 py-2 text-sm font-medium rounded-md ${\n                    isActive(item.href)\n                      ? 'bg-gray-100 dark:bg-tertiary text-primary dark:text-accent'\n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-tertiary/50'\n                  }`}\n                >\n                  <item.icon\n                    className={`mr-3 h-5 w-5 ${\n                      isActive(item.href)\n                        ? 'text-primary dark:text-accent'\n                        : 'text-gray-500 dark:text-gray-400'\n                    }`}\n                  />\n                  {item.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n          <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\n            <Link\n              to=\"/member/dashboard\"\n              className=\"flex items-center px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-tertiary/50\"\n            >\n              <SwitchIcon className=\"mr-3 h-5 w-5 text-gray-500 dark:text-gray-400\" />\n              Switch to Member\n            </Link>\n            <button\n              type=\"button\"\n              className=\"mt-2 flex items-center px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-tertiary/50\"\n              onClick={handleLogout}\n            >\n              <LogoutIcon className=\"mr-3 h-5 w-5 text-gray-500 dark:text-gray-400\" />\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Main content */}\n      <div className=\"lg:pl-64\">\n        <div className=\"sticky top-0 z-10 flex items-center justify-between h-16 px-4 bg-white dark:bg-secondary shadow-sm\">\n          {/* Mobile menu button */}\n          <button\n            type=\"button\"\n            className=\"lg:hidden text-gray-500 dark:text-gray-400\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <MenuIcon className=\"h-6 w-6\" />\n          </button>\n          \n          {/* Right side of navbar */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Dark mode toggle */}\n            <button\n              type=\"button\"\n              className=\"text-gray-500 dark:text-gray-400\"\n              onClick={toggleDarkMode}\n            >\n              {darkMode ? (\n                <SunIcon className=\"h-6 w-6\" />\n              ) : (\n                <MoonIcon className=\"h-6 w-6\" />\n              )}\n            </button>\n            \n            {/* User dropdown */}\n            <div className=\"relative\">\n              <button\n                type=\"button\"\n                className=\"flex items-center space-x-2\"\n                onClick={() => setUserMenuOpen(!userMenuOpen)}\n              >\n                <div className=\"h-8 w-8 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center\">\n                  <UserIcon className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n                </div>\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                  {currentUser?.firstName} {currentUser?.lastName}\n                </span>\n                <ChevronDownIcon className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n              </button>\n              \n              {userMenuOpen && (\n                <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-tertiary rounded-md shadow-lg py-1\">\n                  <Link\n                    to=\"/member/dashboard\"\n                    className=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-secondary\"\n                    onClick={() => setUserMenuOpen(false)}\n                  >\n                    Switch to Member\n                  </Link>\n                  <button\n                    type=\"button\"\n                    className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-secondary\"\n                    onClick={() => {\n                      setUserMenuOpen(false);\n                      handleLogout();\n                    }}\n                  >\n                    Logout\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* Page content */}\n        <main className=\"p-4 sm:p-6 lg:p-8\">\n          <Outlet />\n        </main>\n      </div>\n    </div>\n  );\n};\n\n// Icons\nconst DashboardIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z\" />\n  </svg>\n);\n\nconst BookingIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n  </svg>\n);\n\nconst UsersIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n  </svg>\n);\n\nconst FleetIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n  </svg>\n);\n\nconst AnalyticsIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n  </svg>\n);\n\nconst UserIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n  </svg>\n);\n\nconst LogoutIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n  </svg>\n);\n\nconst SwitchIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\n  </svg>\n);\n\nconst MenuIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n  </svg>\n);\n\nconst XIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n  </svg>\n);\n\nconst SunIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n  </svg>\n);\n\nconst MoonIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n  </svg>\n);\n\nconst ChevronDownIcon = ({ className }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n  </svg>\n);\n\nexport default AdminLayout; ","import React, { useEffect } from 'react';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { useAppSelector } from '../../store';\nimport { selectIsAuthenticated } from '../../features/shared/auth/authSlice';\n\nconst AuthLayout: React.FC = () => {\n  const navigate = useNavigate();\n  const isAuthenticated = useAppSelector(selectIsAuthenticated);\n  \n  useEffect(() => {\n    // If user is already authenticated, redirect to dashboard\n    if (isAuthenticated) {\n      navigate('/member/dashboard');\n    }\n  }, [isAuthenticated, navigate]);\n  \n  return (\n    <div className=\"min-h-screen bg-light dark:bg-primary\">\n      <div className=\"absolute top-0 left-0 w-full p-4\">\n        <div className=\"text-2xl font-bold text-primary dark:text-accent\">HELO</div>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default AuthLayout; ","import api from './api';\n\n// Define types\nexport interface Location {\n  id: string;\n  name: string;\n  address: string;\n  coordinates: {\n    latitude: number;\n    longitude: number;\n  };\n  type: 'heliport' | 'airport' | 'custom';\n}\n\nexport interface BookingDetails {\n  id?: string;\n  userId: string;\n  pickupLocation: Location;\n  dropoffLocation: Location;\n  departureDate: string;\n  departureTime: string;\n  returnDate?: string;\n  returnTime?: string;\n  passengerCount: number;\n  specialRequests?: string;\n  addOns?: {\n    groundTransportation?: boolean;\n    catering?: boolean;\n    conciergeService?: boolean;\n  };\n  status: 'pending' | 'confirmed' | 'completed' | 'cancelled';\n  price: number;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n// Mock data for locations\nconst mockLocations: Location[] = [\n  {\n    id: '1',\n    name: 'Downtown Heliport',\n    address: '123 Main St, New York, NY 10001',\n    coordinates: {\n      latitude: 40.7128,\n      longitude: -74.006,\n    },\n    type: 'heliport',\n  },\n  {\n    id: '2',\n    name: 'Hamptons Executive Airport',\n    address: '456 Airport Rd, East Hampton, NY 11937',\n    coordinates: {\n      latitude: 40.9646,\n      longitude: -72.2519,\n    },\n    type: 'airport',\n  },\n  {\n    id: '3',\n    name: 'Manhattan Heliport',\n    address: '789 Hudson River, New York, NY 10011',\n    coordinates: {\n      latitude: 40.7061,\n      longitude: -74.0137,\n    },\n    type: 'heliport',\n  },\n];\n\n// Mock data for bookings\nconst mockBookings: BookingDetails[] = [\n  {\n    id: '1',\n    userId: '1',\n    pickupLocation: mockLocations[0],\n    dropoffLocation: mockLocations[1],\n    departureDate: '2023-07-15',\n    departureTime: '10:00',\n    passengerCount: 3,\n    specialRequests: 'Champagne on arrival',\n    addOns: {\n      groundTransportation: true,\n      catering: true,\n    },\n    status: 'confirmed',\n    price: 5000,\n    createdAt: '2023-07-01T12:00:00Z',\n    updatedAt: '2023-07-01T12:30:00Z',\n  },\n  {\n    id: '2',\n    userId: '1',\n    pickupLocation: mockLocations[1],\n    dropoffLocation: mockLocations[0],\n    departureDate: '2023-07-20',\n    departureTime: '16:00',\n    passengerCount: 2,\n    status: 'pending',\n    price: 4500,\n    createdAt: '2023-07-05T09:00:00Z',\n    updatedAt: '2023-07-05T09:00:00Z',\n  },\n];\n\n// Booking service functions\nconst bookingService = {\n  // Get all locations\n  getLocations: async (): Promise<Location[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get('/locations');\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => resolve(mockLocations), 500);\n      });\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n      throw error;\n    }\n  },\n  \n  // Get user bookings\n  getUserBookings: async (userId: string): Promise<BookingDetails[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get(`/bookings/user/${userId}`);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const userBookings = mockBookings.filter(booking => booking.userId === userId);\n          resolve(userBookings);\n        }, 500);\n      });\n    } catch (error) {\n      console.error('Error fetching user bookings:', error);\n      throw error;\n    }\n  },\n  \n  // Get recent bookings (for admin)\n  getRecentBookings: async (limit: number = 5): Promise<BookingDetails[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get(`/bookings/recent?limit=${limit}`);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          // Sort by created date (newest first) and take the specified limit\n          const sortedBookings = [...mockBookings].sort(\n            (a, b) => new Date(b.createdAt || '').getTime() - new Date(a.createdAt || '').getTime()\n          ).slice(0, limit);\n          \n          resolve(sortedBookings);\n        }, 500);\n      });\n    } catch (error) {\n      console.error('Error fetching recent bookings:', error);\n      throw error;\n    }\n  },\n  \n  // Get all bookings (for admin)\n  getAllBookings: async (): Promise<BookingDetails[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get('/bookings');\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => resolve([...mockBookings]), 500);\n      });\n    } catch (error) {\n      console.error('Error fetching all bookings:', error);\n      throw error;\n    }\n  },\n  \n  // Get booking by ID\n  getBookingById: async (id: string): Promise<BookingDetails | undefined> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get(`/bookings/${id}`);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const booking = mockBookings.find(b => b.id === id);\n          resolve(booking);\n        }, 500);\n      });\n    } catch (error) {\n      console.error(`Error fetching booking with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Create a new booking\n  createBooking: async (bookingData: Omit<BookingDetails, 'id' | 'status' | 'createdAt' | 'updatedAt'>): Promise<BookingDetails> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.post('/bookings', bookingData);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const newBooking: BookingDetails = {\n            ...bookingData,\n            id: `${mockBookings.length + 1}`,\n            status: 'pending',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n          };\n          mockBookings.push(newBooking);\n          resolve(newBooking);\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error creating booking:', error);\n      throw error;\n    }\n  },\n  \n  // Update a booking\n  updateBooking: async (id: string, bookingData: Partial<BookingDetails>): Promise<BookingDetails> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.put(`/bookings/${id}`, bookingData);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const bookingIndex = mockBookings.findIndex(booking => booking.id === id);\n          if (bookingIndex === -1) {\n            reject(new Error('Booking not found'));\n            return;\n          }\n          \n          const updatedBooking = {\n            ...mockBookings[bookingIndex],\n            ...bookingData,\n            updatedAt: new Date().toISOString(),\n          };\n          \n          mockBookings[bookingIndex] = updatedBooking;\n          resolve(updatedBooking);\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error updating booking:', error);\n      throw error;\n    }\n  },\n  \n  // Cancel a booking\n  cancelBooking: async (id: string): Promise<BookingDetails> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.put(`/bookings/${id}/cancel`);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const bookingIndex = mockBookings.findIndex(booking => booking.id === id);\n          if (bookingIndex === -1) {\n            reject(new Error('Booking not found'));\n            return;\n          }\n          \n          const cancelledBooking = {\n            ...mockBookings[bookingIndex],\n            status: 'cancelled' as const,\n            updatedAt: new Date().toISOString(),\n          };\n          \n          mockBookings[bookingIndex] = cancelledBooking;\n          resolve(cancelledBooking);\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error cancelling booking:', error);\n      throw error;\n    }\n  },\n};\n\nexport default bookingService; ","import api from './api';\nimport { User } from '../features/shared/auth/authSlice';\n\n// Define types\nexport interface UserProfile extends User {\n  phoneNumber?: string;\n  address?: {\n    street: string;\n    city: string;\n    state: string;\n    zipCode: string;\n    country: string;\n  };\n  emergencyContact?: {\n    name: string;\n    relationship: string;\n    phoneNumber: string;\n  };\n  preferences?: {\n    notifications: boolean;\n    marketingEmails: boolean;\n    darkMode: boolean;\n  };\n  paymentMethods?: PaymentMethod[];\n  savedLocations?: SavedLocation[];\n  createdAt?: string;\n}\n\nexport interface PaymentMethod {\n  id: string;\n  type: 'credit_card' | 'debit_card' | 'bank_account';\n  lastFour: string;\n  expiryDate?: string;\n  isDefault: boolean;\n  cardBrand?: 'visa' | 'mastercard' | 'amex' | 'discover';\n}\n\nexport interface SavedLocation {\n  id: string;\n  name: string;\n  address: string;\n  coordinates: {\n    latitude: number;\n    longitude: number;\n  };\n  type: 'home' | 'work' | 'favorite' | 'other';\n}\n\n// Mock data\nconst mockUserProfile: UserProfile = {\n  id: '1',\n  email: 'john.doe@example.com',\n  firstName: 'John',\n  lastName: 'Doe',\n  role: 'member',\n  membershipTier: 'premium',\n  phoneNumber: '+1 (555) 123-4567',\n  address: {\n    street: '123 Park Avenue',\n    city: 'New York',\n    state: 'NY',\n    zipCode: '10001',\n    country: 'USA',\n  },\n  emergencyContact: {\n    name: 'Jane Doe',\n    relationship: 'Spouse',\n    phoneNumber: '+1 (555) 987-6543',\n  },\n  preferences: {\n    notifications: true,\n    marketingEmails: false,\n    darkMode: true,\n  },\n  paymentMethods: [\n    {\n      id: '1',\n      type: 'credit_card',\n      lastFour: '4242',\n      expiryDate: '12/25',\n      isDefault: true,\n      cardBrand: 'visa',\n    },\n    {\n      id: '2',\n      type: 'credit_card',\n      lastFour: '1234',\n      expiryDate: '10/24',\n      isDefault: false,\n      cardBrand: 'amex',\n    },\n  ],\n  savedLocations: [\n    {\n      id: '1',\n      name: 'Home',\n      address: '123 Park Avenue, New York, NY 10001',\n      coordinates: {\n        latitude: 40.7128,\n        longitude: -74.006,\n      },\n      type: 'home',\n    },\n    {\n      id: '2',\n      name: 'Office',\n      address: '555 Madison Avenue, New York, NY 10022',\n      coordinates: {\n        latitude: 40.7624,\n        longitude: -73.9738,\n      },\n      type: 'work',\n    },\n    {\n      id: '3',\n      name: 'Hamptons House',\n      address: '789 Beach Road, East Hampton, NY 11937',\n      coordinates: {\n        latitude: 40.9646,\n        longitude: -72.1878,\n      },\n      type: 'favorite',\n    },\n  ],\n};\n\n// Mock users for admin view\nconst mockUsers: UserProfile[] = [\n  mockUserProfile,\n  {\n    id: '2',\n    email: 'sarah.smith@example.com',\n    firstName: 'Sarah',\n    lastName: 'Smith',\n    role: 'member',\n    membershipTier: 'premium',\n    phoneNumber: '+1 (555) 222-3333',\n    createdAt: '2023-01-15T10:30:00Z',\n  },\n  {\n    id: '3',\n    email: 'michael.johnson@example.com',\n    firstName: 'Michael',\n    lastName: 'Johnson',\n    role: 'member',\n    membershipTier: 'elite',\n    phoneNumber: '+1 (555) 444-5555',\n    createdAt: '2022-11-05T14:20:00Z',\n  },\n  {\n    id: '4',\n    email: 'emily.brown@example.com',\n    firstName: 'Emily',\n    lastName: 'Brown',\n    role: 'member',\n    membershipTier: 'standard',\n    phoneNumber: '+1 (555) 666-7777',\n    createdAt: '2023-03-22T09:15:00Z',\n  }\n];\n\n// User service functions\nconst userService = {\n  // Get all users (for admin)\n  getAllUsers: async (): Promise<UserProfile[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get('/users');\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => resolve([...mockUsers]), 500);\n      });\n    } catch (error) {\n      console.error('Error fetching all users:', error);\n      throw error;\n    }\n  },\n  \n  // Get user profile\n  getUserProfile: async (userId: string): Promise<UserProfile> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get(`/users/${userId}`);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => resolve(mockUserProfile), 500);\n      });\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n  },\n  \n  // Update user profile\n  updateUserProfile: async (userId: string, profileData: Partial<UserProfile>): Promise<UserProfile> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.put(`/users/${userId}`, profileData);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const updatedProfile = {\n            ...mockUserProfile,\n            ...profileData,\n          };\n          resolve(updatedProfile);\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      throw error;\n    }\n  },\n  \n  // Add payment method\n  addPaymentMethod: async (userId: string, paymentData: Omit<PaymentMethod, 'id'>): Promise<PaymentMethod> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.post(`/users/${userId}/payment-methods`, paymentData);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const newPaymentMethod: PaymentMethod = {\n            ...paymentData,\n            id: `${mockUserProfile.paymentMethods?.length ?? 0 + 1}`,\n          };\n          \n          if (mockUserProfile.paymentMethods) {\n            mockUserProfile.paymentMethods.push(newPaymentMethod);\n          } else {\n            mockUserProfile.paymentMethods = [newPaymentMethod];\n          }\n          \n          resolve(newPaymentMethod);\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error adding payment method:', error);\n      throw error;\n    }\n  },\n  \n  // Remove payment method\n  removePaymentMethod: async (userId: string, paymentMethodId: string): Promise<void> => {\n    try {\n      // In a real app, this would be an API call\n      // await api.delete(`/users/${userId}/payment-methods/${paymentMethodId}`);\n      \n      // For now, simulate removal\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          if (mockUserProfile.paymentMethods) {\n            mockUserProfile.paymentMethods = mockUserProfile.paymentMethods.filter(\n              (method) => method.id !== paymentMethodId\n            );\n          }\n          resolve();\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error removing payment method:', error);\n      throw error;\n    }\n  },\n  \n  // Add saved location\n  addSavedLocation: async (userId: string, locationData: Omit<SavedLocation, 'id'>): Promise<SavedLocation> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.post(`/users/${userId}/saved-locations`, locationData);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const newLocation: SavedLocation = {\n            ...locationData,\n            id: `${mockUserProfile.savedLocations?.length ?? 0 + 1}`,\n          };\n          \n          if (mockUserProfile.savedLocations) {\n            mockUserProfile.savedLocations.push(newLocation);\n          } else {\n            mockUserProfile.savedLocations = [newLocation];\n          }\n          \n          resolve(newLocation);\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error adding saved location:', error);\n      throw error;\n    }\n  },\n  \n  // Remove saved location\n  removeSavedLocation: async (userId: string, locationId: string): Promise<void> => {\n    try {\n      // In a real app, this would be an API call\n      // await api.delete(`/users/${userId}/saved-locations/${locationId}`);\n      \n      // For now, simulate removal\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          if (mockUserProfile.savedLocations) {\n            mockUserProfile.savedLocations = mockUserProfile.savedLocations.filter(\n              (location) => location.id !== locationId\n            );\n          }\n          resolve();\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('Error removing saved location:', error);\n      throw error;\n    }\n  },\n  \n  // Get saved locations\n  getSavedLocations: async (): Promise<SavedLocation[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get('/users/saved-locations');\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(mockUserProfile.savedLocations || []);\n        }, 500);\n      });\n    } catch (error) {\n      console.error('Error fetching saved locations:', error);\n      throw error;\n    }\n  },\n};\n\nexport default userService; ","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAppSelector } from '../../store';\nimport { selectCurrentUser } from '../../features/shared/auth/authSlice';\nimport bookingService, { BookingDetails } from '../../services/bookingService';\nimport userService, { SavedLocation } from '../../services/userService';\n\nconst Dashboard: React.FC = () => {\n  const currentUser = useAppSelector(selectCurrentUser);\n  const [upcomingTrips, setUpcomingTrips] = useState<BookingDetails[]>([]);\n  const [savedLocations, setSavedLocations] = useState<SavedLocation[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        if (currentUser) {\n          // Fetch user's upcoming trips\n          const trips = await bookingService.getUserBookings(currentUser.id);\n          const upcoming = trips.filter(\n            (trip) => trip.status !== 'cancelled' && trip.status !== 'completed'\n          );\n          setUpcomingTrips(upcoming);\n          \n          // Fetch user's saved locations\n          const userProfile = await userService.getUserProfile(currentUser.id);\n          setSavedLocations(userProfile.savedLocations || []);\n        }\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [currentUser]);\n  \n  return (\n    <div className=\"space-y-8\">\n      {/* Welcome section */}\n      <div className=\"bg-white dark:bg-secondary rounded-lg shadow-md p-6\">\n        <h1 className=\"text-2xl font-bold text-primary dark:text-light\">\n          Welcome back, {currentUser?.firstName}\n        </h1>\n        <p className=\"mt-2 text-gray-600 dark:text-gray-300\">\n          Your luxury air mobility experience awaits. Where would you like to fly today?\n        </p>\n      </div>\n      \n      {/* Quick booking section */}\n      <div className=\"bg-white dark:bg-secondary rounded-lg shadow-md p-6\">\n        <h2 className=\"text-xl font-semibold text-primary dark:text-light mb-4\">\n          Quick Booking\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"from\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              From\n            </label>\n            <select\n              id=\"from\"\n              className=\"input\"\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled>Select departure location</option>\n              {savedLocations.map((location) => (\n                <option key={location.id} value={location.id}>\n                  {location.name} - {location.address}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"to\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              To\n            </label>\n            <select\n              id=\"to\"\n              className=\"input\"\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled>Select destination</option>\n              {savedLocations.map((location) => (\n                <option key={location.id} value={location.id}>\n                  {location.name} - {location.address}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Date\n            </label>\n            <input\n              type=\"date\"\n              id=\"date\"\n              className=\"input\"\n              min={new Date().toISOString().split('T')[0]}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"passengers\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Passengers\n            </label>\n            <select\n              id=\"passengers\"\n              className=\"input\"\n              defaultValue=\"2\"\n            >\n              {[1, 2, 3, 4, 5, 6, 7, 8].map((num) => (\n                <option key={num} value={num}>\n                  {num} {num === 1 ? 'passenger' : 'passengers'}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <Link\n            to=\"/member/booking\"\n            className=\"btn-primary w-full flex justify-center\"\n          >\n            Continue Booking\n          </Link>\n        </div>\n      </div>\n      \n      {/* Upcoming trips section */}\n      <div className=\"bg-white dark:bg-secondary rounded-lg shadow-md p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold text-primary dark:text-light\">\n            Upcoming Trips\n          </h2>\n          <Link\n            to=\"/member/trips\"\n            className=\"text-sm font-medium text-accent hover:text-accent/80\"\n          >\n            View all trips\n          </Link>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"flex justify-center py-8\">\n            <svg className=\"animate-spin h-8 w-8 text-accent\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n          </div>\n        ) : upcomingTrips.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500 dark:text-gray-400\">\n              You don't have any upcoming trips.\n            </p>\n            <Link\n              to=\"/member/booking\"\n              className=\"mt-4 inline-block btn-secondary\"\n            >\n              Book Your First Trip\n            </Link>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {upcomingTrips.map((trip) => (\n              <div\n                key={trip.id}\n                className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-tertiary/50 transition-colors\"\n              >\n                <div className=\"flex justify-between\">\n                  <div>\n                    <h3 className=\"font-medium text-primary dark:text-light\">\n                      {trip.pickupLocation.name} to {trip.dropoffLocation.name}\n                    </h3>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                      {new Date(trip.departureDate).toLocaleDateString('en-US', {\n                        weekday: 'long',\n                        month: 'long',\n                        day: 'numeric',\n                      })} • {trip.departureTime}\n                    </p>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                      trip.status === 'confirmed'\n                        ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                        : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400'\n                    }`}>\n                      {trip.status.charAt(0).toUpperCase() + trip.status.slice(1)}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"mt-4 flex justify-end\">\n                  <Link\n                    to={`/member/trips/${trip.id}`}\n                    className=\"text-sm font-medium text-accent hover:text-accent/80\"\n                  >\n                    View Details\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      {/* Membership section */}\n      <div className=\"bg-white dark:bg-secondary rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-primary dark:text-light\">\n              Your Membership\n            </h2>\n            <p className=\"mt-1 text-gray-600 dark:text-gray-300\">\n              {currentUser?.membershipTier === 'elite'\n                ? 'Elite Tier - Unlimited flights, priority booking, and exclusive benefits'\n                : currentUser?.membershipTier === 'premium'\n                ? 'Premium Tier - Enhanced benefits and priority service'\n                : 'Standard Tier - Basic membership benefits'}\n            </p>\n          </div>\n          <div className=\"bg-accent/10 dark:bg-accent/20 rounded-full p-3\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\n            </svg>\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <Link\n            to=\"/member/profile\"\n            className=\"text-sm font-medium text-accent hover:text-accent/80\"\n          >\n            View membership details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard; ","import api from './api';\n\n// Define types\nexport interface Vehicle {\n  id: string;\n  name: string;\n  type: 'helicopter' | 'car' | 'suv' | 'limousine';\n  make: string;\n  model: string;\n  year: number;\n  capacity: number;\n  status: 'available' | 'in_use' | 'maintenance' | 'out_of_service';\n  imageUrl: string;\n  features?: string[];\n  lastMaintenance?: string;\n  nextMaintenance?: string;\n}\n\nexport interface Helicopter extends Vehicle {\n  type: 'helicopter';\n  range: number; // in miles\n  cruiseSpeed: number; // in mph\n  maxAltitude: number; // in feet\n  pilotIds: string[];\n}\n\nexport interface GroundVehicle extends Vehicle {\n  type: 'car' | 'suv' | 'limousine';\n  licensePlate: string;\n  driverIds: string[];\n}\n\n// Mock data for helicopters\nconst mockHelicopters: Helicopter[] = [\n  {\n    id: '1',\n    name: 'Luxury One',\n    type: 'helicopter',\n    make: 'Airbus',\n    model: 'H160',\n    year: 2022,\n    capacity: 8,\n    status: 'available',\n    imageUrl: '/assets/helicopters/h160.jpg',\n    features: ['WiFi', 'Leather Seats', 'Champagne Bar', 'Entertainment System'],\n    lastMaintenance: '2023-06-15',\n    nextMaintenance: '2023-09-15',\n    range: 500,\n    cruiseSpeed: 160,\n    maxAltitude: 20000,\n    pilotIds: ['p1', 'p2'],\n  },\n  {\n    id: '2',\n    name: 'Executive Elite',\n    type: 'helicopter',\n    make: 'Bell',\n    model: '525 Relentless',\n    year: 2023,\n    capacity: 16,\n    status: 'available',\n    imageUrl: '/assets/helicopters/bell525.jpg',\n    features: ['WiFi', 'Conference Setup', 'Premium Audio', 'Gourmet Catering'],\n    lastMaintenance: '2023-07-01',\n    nextMaintenance: '2023-10-01',\n    range: 575,\n    cruiseSpeed: 175,\n    maxAltitude: 22000,\n    pilotIds: ['p1', 'p3'],\n  },\n  {\n    id: '3',\n    name: 'Coastal Cruiser',\n    type: 'helicopter',\n    make: 'Sikorsky',\n    model: 'S-76D',\n    year: 2021,\n    capacity: 12,\n    status: 'in_use',\n    imageUrl: '/assets/helicopters/s76d.jpg',\n    features: ['Panoramic Windows', 'Luxury Interior', 'Noise Reduction'],\n    lastMaintenance: '2023-05-20',\n    nextMaintenance: '2023-08-20',\n    range: 450,\n    cruiseSpeed: 155,\n    maxAltitude: 18000,\n    pilotIds: ['p2', 'p4'],\n  },\n];\n\n// Mock data for ground vehicles\nconst mockGroundVehicles: GroundVehicle[] = [\n  {\n    id: 'g1',\n    name: 'Executive Black',\n    type: 'limousine',\n    make: 'Mercedes-Benz',\n    model: 'S-Class Maybach',\n    year: 2023,\n    capacity: 4,\n    status: 'available',\n    imageUrl: '/assets/vehicles/maybach.jpg',\n    features: ['Privacy Partition', 'Bar', 'Reclining Seats', 'Ambient Lighting'],\n    licensePlate: 'HELO001',\n    driverIds: ['d1', 'd2'],\n  },\n  {\n    id: 'g2',\n    name: 'Urban SUV',\n    type: 'suv',\n    make: 'Cadillac',\n    model: 'Escalade',\n    year: 2023,\n    capacity: 6,\n    status: 'available',\n    imageUrl: '/assets/vehicles/escalade.jpg',\n    features: ['Leather Interior', 'WiFi', 'Premium Sound'],\n    licensePlate: 'HELO002',\n    driverIds: ['d3'],\n  },\n  {\n    id: 'g3',\n    name: 'Sport Executive',\n    type: 'car',\n    make: 'Bentley',\n    model: 'Flying Spur',\n    year: 2022,\n    capacity: 4,\n    status: 'maintenance',\n    imageUrl: '/assets/vehicles/bentley.jpg',\n    features: ['Handcrafted Interior', 'Massage Seats', 'Refrigerated Compartment'],\n    lastMaintenance: '2023-07-10',\n    nextMaintenance: '2023-10-10',\n    licensePlate: 'HELO003',\n    driverIds: ['d4'],\n  },\n];\n\n// Fleet service functions\nconst fleetService = {\n  // Get all helicopters\n  getHelicopters: async (): Promise<Helicopter[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get('/fleet/helicopters');\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => resolve(mockHelicopters), 500);\n      });\n    } catch (error) {\n      console.error('Error fetching helicopters:', error);\n      throw error;\n    }\n  },\n  \n  // Get helicopter by ID\n  getHelicopterById: async (id: string): Promise<Helicopter | undefined> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get(`/fleet/helicopters/${id}`);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const helicopter = mockHelicopters.find((h) => h.id === id);\n          resolve(helicopter);\n        }, 500);\n      });\n    } catch (error) {\n      console.error(`Error fetching helicopter with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Get all ground vehicles\n  getGroundVehicles: async (): Promise<GroundVehicle[]> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get('/fleet/ground-vehicles');\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => resolve(mockGroundVehicles), 500);\n      });\n    } catch (error) {\n      console.error('Error fetching ground vehicles:', error);\n      throw error;\n    }\n  },\n  \n  // Get ground vehicle by ID\n  getGroundVehicleById: async (id: string): Promise<GroundVehicle | undefined> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.get(`/fleet/ground-vehicles/${id}`);\n      // return response.data;\n      \n      // For now, return mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          const vehicle = mockGroundVehicles.find((v) => v.id === id);\n          resolve(vehicle);\n        }, 500);\n      });\n    } catch (error) {\n      console.error(`Error fetching ground vehicle with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Update vehicle status\n  updateVehicleStatus: async (\n    id: string, \n    vehicleType: 'helicopter' | 'ground', \n    status: Vehicle['status']\n  ): Promise<Vehicle | undefined> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.put(`/fleet/${vehicleType}s/${id}/status`, { status });\n      // return response.data;\n      \n      // For now, update mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          if (vehicleType === 'helicopter') {\n            const index = mockHelicopters.findIndex((h) => h.id === id);\n            if (index !== -1) {\n              mockHelicopters[index].status = status;\n              resolve(mockHelicopters[index]);\n            } else {\n              resolve(undefined);\n            }\n          } else {\n            const index = mockGroundVehicles.findIndex((v) => v.id === id);\n            if (index !== -1) {\n              mockGroundVehicles[index].status = status;\n              resolve(mockGroundVehicles[index]);\n            } else {\n              resolve(undefined);\n            }\n          }\n        }, 1000);\n      });\n    } catch (error) {\n      console.error(`Error updating status for ${vehicleType} with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Schedule maintenance\n  scheduleMaintenance: async (\n    id: string,\n    vehicleType: 'helicopter' | 'ground',\n    maintenanceDate: string\n  ): Promise<Vehicle | undefined> => {\n    try {\n      // In a real app, this would be an API call\n      // const response = await api.put(`/fleet/${vehicleType}s/${id}/maintenance`, { maintenanceDate });\n      // return response.data;\n      \n      // For now, update mock data\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          if (vehicleType === 'helicopter') {\n            const index = mockHelicopters.findIndex((h) => h.id === id);\n            if (index !== -1) {\n              mockHelicopters[index].nextMaintenance = maintenanceDate;\n              mockHelicopters[index].status = 'maintenance';\n              resolve(mockHelicopters[index]);\n            } else {\n              resolve(undefined);\n            }\n          } else {\n            const index = mockGroundVehicles.findIndex((v) => v.id === id);\n            if (index !== -1) {\n              mockGroundVehicles[index].nextMaintenance = maintenanceDate;\n              mockGroundVehicles[index].status = 'maintenance';\n              resolve(mockGroundVehicles[index]);\n            } else {\n              resolve(undefined);\n            }\n          }\n        }, 1000);\n      });\n    } catch (error) {\n      console.error(`Error scheduling maintenance for ${vehicleType} with ID ${id}:`, error);\n      throw error;\n    }\n  },\n};\n\nexport default fleetService; ","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport userService, { SavedLocation } from '../../services/userService';\nimport bookingService from '../../services/bookingService';\nimport fleetService, { Helicopter } from '../../services/fleetService';\n\nconst BookingPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [savedLocations, setSavedLocations] = useState<SavedLocation[]>([]);\n  const [helicopters, setHelicopters] = useState<Helicopter[]>([]);\n  const [loading, setLoading] = useState(true);\n  \n  const [bookingData, setBookingData] = useState({\n    pickupLocation: '',\n    dropoffLocation: '',\n    date: '',\n    time: '',\n    passengers: 1,\n    helicopterId: '',\n    addGroundTransport: false,\n    notes: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // In a real app, these would be API calls\n        const locations = await userService.getSavedLocations();\n        const helicopterData = await fleetService.getHelicopters();\n        \n        setSavedLocations(locations);\n        setHelicopters(helicopterData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.target as HTMLInputElement;\n    \n    if (type === 'checkbox') {\n      const { checked } = e.target as HTMLInputElement;\n      setBookingData({\n        ...bookingData,\n        [name]: checked,\n      });\n    } else {\n      setBookingData({\n        ...bookingData,\n        [name]: value,\n      });\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      // Find the selected locations from the saved locations\n      const pickup = savedLocations.find(loc => loc.id === bookingData.pickupLocation);\n      const dropoff = savedLocations.find(loc => loc.id === bookingData.dropoffLocation);\n      \n      if (!pickup || !dropoff) {\n        console.error('Invalid locations selected');\n        return;\n      }\n      \n      // Create the booking with the correct data structure\n      const newBooking = {\n        userId: '1', // In a real app, this would come from authentication\n        pickupLocation: {\n          id: pickup.id,\n          name: pickup.name,\n          address: pickup.address,\n          coordinates: pickup.coordinates,\n          type: 'custom' as const\n        },\n        dropoffLocation: {\n          id: dropoff.id,\n          name: dropoff.name,\n          address: dropoff.address,\n          coordinates: dropoff.coordinates,\n          type: 'custom' as const\n        },\n        departureDate: bookingData.date,\n        departureTime: bookingData.time,\n        passengerCount: bookingData.passengers,\n        specialRequests: bookingData.notes,\n        addOns: {\n          groundTransportation: bookingData.addGroundTransport\n        },\n        price: 5000 // In a real app, this would be calculated based on distance, helicopter, etc.\n      };\n      \n      // In a real app, this would be an API call\n      const booking = await bookingService.createBooking(newBooking);\n      \n      // Navigate to the trip details page\n      navigate(`/member/trips/${booking.id}`);\n    } catch (error) {\n      console.error('Error creating booking:', error);\n    }\n  };\n\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Book Your Flight</h1>\n      \n      <div className=\"mb-8\">\n        <div className=\"flex items-center\">\n          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${step >= 1 ? 'bg-accent text-primary' : 'bg-gray-300 text-gray-700'}`}>\n            1\n          </div>\n          <div className={`h-1 w-24 mx-2 ${step >= 2 ? 'bg-accent' : 'bg-gray-300'}`}></div>\n          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${step >= 2 ? 'bg-accent text-primary' : 'bg-gray-300 text-gray-700'}`}>\n            2\n          </div>\n          <div className={`h-1 w-24 mx-2 ${step >= 3 ? 'bg-accent' : 'bg-gray-300'}`}></div>\n          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${step >= 3 ? 'bg-accent text-primary' : 'bg-gray-300 text-gray-700'}`}>\n            3\n          </div>\n        </div>\n        <div className=\"flex justify-between mt-2 text-sm\">\n          <span>Location</span>\n          <span>Schedule</span>\n          <span>Confirm</span>\n        </div>\n      </div>\n      \n      <div className=\"card\">\n        <form onSubmit={handleSubmit}>\n          {step === 1 && (\n            <div>\n              <h2 className=\"text-xl font-semibold mb-6\">Select Locations</h2>\n              \n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium mb-2\">Pickup Location</label>\n                <select\n                  name=\"pickupLocation\"\n                  value={bookingData.pickupLocation}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                >\n                  <option value=\"\">Select a location</option>\n                  {savedLocations.map((location) => (\n                    <option key={location.id} value={location.id}>\n                      {location.name} - {location.address}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium mb-2\">Dropoff Location</label>\n                <select\n                  name=\"dropoffLocation\"\n                  value={bookingData.dropoffLocation}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                >\n                  <option value=\"\">Select a location</option>\n                  {savedLocations.map((location) => (\n                    <option key={location.id} value={location.id}>\n                      {location.name} - {location.address}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"flex justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={nextStep}\n                  className=\"btn-primary\"\n                  disabled={!bookingData.pickupLocation || !bookingData.dropoffLocation}\n                >\n                  Next\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {step === 2 && (\n            <div>\n              <h2 className=\"text-xl font-semibold mb-6\">Schedule Your Flight</h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={bookingData.date}\n                    onChange={handleInputChange}\n                    className=\"input\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Time</label>\n                  <input\n                    type=\"time\"\n                    name=\"time\"\n                    value={bookingData.time}\n                    onChange={handleInputChange}\n                    className=\"input\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Number of Passengers</label>\n                  <input\n                    type=\"number\"\n                    name=\"passengers\"\n                    min=\"1\"\n                    max=\"6\"\n                    value={bookingData.passengers}\n                    onChange={handleInputChange}\n                    className=\"input\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Select Helicopter</label>\n                  <select\n                    name=\"helicopterId\"\n                    value={bookingData.helicopterId}\n                    onChange={handleInputChange}\n                    className=\"input\"\n                    required\n                  >\n                    <option value=\"\">Select a helicopter</option>\n                    {helicopters.map((helicopter) => (\n                      <option key={helicopter.id} value={helicopter.id}>\n                        {helicopter.model} - {helicopter.capacity} passengers\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"mb-6\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"addGroundTransport\"\n                    checked={bookingData.addGroundTransport}\n                    onChange={handleInputChange}\n                    className=\"mr-2\"\n                  />\n                  <span>Add ground transportation</span>\n                </label>\n              </div>\n              \n              <div className=\"flex justify-between\">\n                <button\n                  type=\"button\"\n                  onClick={prevStep}\n                  className=\"btn-secondary\"\n                >\n                  Back\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={nextStep}\n                  className=\"btn-primary\"\n                  disabled={!bookingData.date || !bookingData.time || !bookingData.helicopterId}\n                >\n                  Next\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {step === 3 && (\n            <div>\n              <h2 className=\"text-xl font-semibold mb-6\">Confirm Your Booking</h2>\n              \n              <div className=\"bg-gray-100 dark:bg-tertiary p-4 rounded-md mb-6\">\n                <h3 className=\"font-medium mb-2\">Booking Summary</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Pickup Location:</p>\n                    <p>{savedLocations.find(loc => loc.id === bookingData.pickupLocation)?.name}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Dropoff Location:</p>\n                    <p>{savedLocations.find(loc => loc.id === bookingData.dropoffLocation)?.name}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Date & Time:</p>\n                    <p>{bookingData.date} at {bookingData.time}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Helicopter:</p>\n                    <p>{helicopters.find(h => h.id === bookingData.helicopterId)?.model}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Passengers:</p>\n                    <p>{bookingData.passengers}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Ground Transport:</p>\n                    <p>{bookingData.addGroundTransport ? 'Yes' : 'No'}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium mb-2\">Additional Notes</label>\n                <textarea\n                  name=\"notes\"\n                  value={bookingData.notes}\n                  onChange={handleInputChange}\n                  className=\"input h-24\"\n                  placeholder=\"Any special requests or information we should know?\"\n                ></textarea>\n              </div>\n              \n              <div className=\"flex justify-between\">\n                <button\n                  type=\"button\"\n                  onClick={prevStep}\n                  className=\"btn-secondary\"\n                >\n                  Back\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn-primary\"\n                >\n                  Confirm Booking\n                </button>\n              </div>\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default BookingPage; ","import React, { useState, useEffect } from 'react';\nimport { useAppSelector } from '../../store';\nimport { selectCurrentUser } from '../../features/shared/auth/authSlice';\nimport userService from '../../services/userService';\n\nconst ProfilePage: React.FC = () => {\n  const currentUser = useAppSelector(selectCurrentUser);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    emergencyContact: {\n      name: '',\n      phone: '',\n      relationship: '',\n    },\n  });\n\n  useEffect(() => {\n    if (currentUser) {\n      // In a real app, we would fetch the full profile from the API\n      // For now, we'll use the current user data and add some mock data\n      setFormData({\n        firstName: currentUser.firstName || '',\n        lastName: currentUser.lastName || '',\n        email: currentUser.email || '',\n        phone: '(555) 123-4567', // Default phone number since it's not in the User interface\n        address: '123 Main St',\n        city: 'New York',\n        state: 'NY',\n        zipCode: '10001',\n        emergencyContact: {\n          name: 'Jane Doe',\n          phone: '(555) 123-4567',\n          relationship: 'Spouse',\n        },\n      });\n    }\n  }, [currentUser]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleEmergencyContactChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      emergencyContact: {\n        ...formData.emergencyContact,\n        [name]: value,\n      },\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // In a real app, we would save the profile data to the API\n    // For now, we'll just log it and toggle editing mode\n    console.log('Profile data saved:', formData);\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">My Profile</h1>\n        <button\n          onClick={() => setIsEditing(!isEditing)}\n          className=\"btn-secondary\"\n        >\n          {isEditing ? 'Cancel' : 'Edit Profile'}\n        </button>\n      </div>\n\n      <div className=\"card\">\n        {isEditing ? (\n          <form onSubmit={handleSubmit}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">First Name</label>\n                <input\n                  type=\"text\"\n                  name=\"firstName\"\n                  value={formData.firstName}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Last Name</label>\n                <input\n                  type=\"text\"\n                  name=\"lastName\"\n                  value={formData.lastName}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Phone</label>\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Address</label>\n                <input\n                  type=\"text\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">City</label>\n                <input\n                  type=\"text\"\n                  name=\"city\"\n                  value={formData.city}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">State</label>\n                <input\n                  type=\"text\"\n                  name=\"state\"\n                  value={formData.state}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Zip Code</label>\n                <input\n                  type=\"text\"\n                  name=\"zipCode\"\n                  value={formData.zipCode}\n                  onChange={handleInputChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n            </div>\n\n            <h2 className=\"text-xl font-semibold mt-8 mb-4\">Emergency Contact</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.emergencyContact.name}\n                  onChange={handleEmergencyContactChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Phone</label>\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={formData.emergencyContact.phone}\n                  onChange={handleEmergencyContactChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Relationship</label>\n                <input\n                  type=\"text\"\n                  name=\"relationship\"\n                  value={formData.emergencyContact.relationship}\n                  onChange={handleEmergencyContactChange}\n                  className=\"input\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"mt-8 flex justify-end\">\n              <button type=\"submit\" className=\"btn-primary\">\n                Save Changes\n              </button>\n            </div>\n          </form>\n        ) : (\n          <div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">First Name</h3>\n                <p className=\"mt-1\">{formData.firstName}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Last Name</h3>\n                <p className=\"mt-1\">{formData.lastName}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Email</h3>\n                <p className=\"mt-1\">{formData.email}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Phone</h3>\n                <p className=\"mt-1\">{formData.phone}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Address</h3>\n                <p className=\"mt-1\">{formData.address}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">City</h3>\n                <p className=\"mt-1\">{formData.city}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">State</h3>\n                <p className=\"mt-1\">{formData.state}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Zip Code</h3>\n                <p className=\"mt-1\">{formData.zipCode}</p>\n              </div>\n            </div>\n\n            <h2 className=\"text-xl font-semibold mt-8 mb-4\">Emergency Contact</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Name</h3>\n                <p className=\"mt-1\">{formData.emergencyContact.name}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Phone</h3>\n                <p className=\"mt-1\">{formData.emergencyContact.phone}</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Relationship</h3>\n                <p className=\"mt-1\">{formData.emergencyContact.relationship}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"card mt-8\">\n        <h2 className=\"text-xl font-bold mb-4\">Membership Details</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Membership Level</h3>\n            <p className=\"mt-1 font-semibold text-accent\">\n              {currentUser?.membershipTier || 'Platinum'}\n            </p>\n          </div>\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Member Since</h3>\n            <p className=\"mt-1\">January 15, 2023</p>\n          </div>\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Next Billing Date</h3>\n            <p className=\"mt-1\">January 15, 2024</p>\n          </div>\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Status</h3>\n            <p className=\"mt-1 text-green-500\">Active</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage; ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport bookingService, { BookingDetails } from '../../services/bookingService';\nimport { useAppSelector } from '../../store';\nimport { selectCurrentUser } from '../../features/shared/auth/authSlice';\n\nconst TripsPage: React.FC = () => {\n  const currentUser = useAppSelector(selectCurrentUser);\n  const [trips, setTrips] = useState<BookingDetails[]>([]);\n  const [activeTab, setActiveTab] = useState<'upcoming' | 'past'>('upcoming');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchTrips = async () => {\n      try {\n        setLoading(true);\n        // In a real app, these would be API calls with filters\n        const allTrips = await bookingService.getUserBookings(currentUser?.id || '1');\n        setTrips(allTrips);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching trips:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchTrips();\n  }, [currentUser]);\n\n  const upcomingTrips = trips.filter(\n    (trip) => new Date(trip.departureDate) >= new Date()\n  );\n\n  const pastTrips = trips.filter(\n    (trip) => new Date(trip.departureDate) < new Date()\n  );\n\n  const formatDate = (dateString: string) => {\n    const options: Intl.DateTimeFormatOptions = {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'confirmed':\n        return 'text-green-500';\n      case 'pending':\n        return 'text-yellow-500';\n      case 'cancelled':\n        return 'text-red-500';\n      case 'completed':\n        return 'text-blue-500';\n      default:\n        return 'text-gray-500';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">My Trips</h1>\n\n      <div className=\"flex border-b border-gray-300 dark:border-tertiary mb-6\">\n        <button\n          className={`py-2 px-4 font-medium ${\n            activeTab === 'upcoming'\n              ? 'border-b-2 border-accent text-accent'\n              : 'text-gray-500 dark:text-gray-400'\n          }`}\n          onClick={() => setActiveTab('upcoming')}\n        >\n          Upcoming\n        </button>\n        <button\n          className={`py-2 px-4 font-medium ${\n            activeTab === 'past'\n              ? 'border-b-2 border-accent text-accent'\n              : 'text-gray-500 dark:text-gray-400'\n          }`}\n          onClick={() => setActiveTab('past')}\n        >\n          Past\n        </button>\n      </div>\n\n      {activeTab === 'upcoming' && (\n        <>\n          {upcomingTrips.length === 0 ? (\n            <div className=\"card text-center py-12\">\n              <h2 className=\"text-xl font-semibold mb-4\">No upcoming trips</h2>\n              <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\n                You don't have any upcoming trips scheduled.\n              </p>\n              <Link to=\"/member/booking\" className=\"btn-primary\">\n                Book a Flight\n              </Link>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {upcomingTrips.map((trip) => (\n                <div key={trip.id} className=\"card\">\n                  <div className=\"flex justify-between items-start mb-4\">\n                    <div>\n                      <h2 className=\"text-xl font-semibold\">\n                        {trip.pickupLocation.name} to {trip.dropoffLocation.name}\n                      </h2>\n                      <p className=\"text-gray-500 dark:text-gray-400\">\n                        {formatDate(trip.departureDate)} • {trip.departureTime}\n                      </p>\n                    </div>\n                    <span\n                      className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(\n                        trip.status\n                      )} bg-opacity-10`}\n                    >\n                      {trip.status.charAt(0).toUpperCase() + trip.status.slice(1)}\n                    </span>\n                  </div>\n                  <div className=\"border-t border-gray-200 dark:border-tertiary pt-4 mt-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <div>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {trip.passengerCount} Passengers\n                        </p>\n                        <p className=\"font-medium\">${trip.price.toFixed(2)}</p>\n                      </div>\n                      <Link\n                        to={`/member/trips/${trip.id}`}\n                        className=\"btn-secondary text-sm\"\n                      >\n                        View Details\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n\n      {activeTab === 'past' && (\n        <>\n          {pastTrips.length === 0 ? (\n            <div className=\"card text-center py-12\">\n              <h2 className=\"text-xl font-semibold mb-4\">No past trips</h2>\n              <p className=\"text-gray-500 dark:text-gray-400\">\n                You don't have any past trips.\n              </p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {pastTrips.map((trip) => (\n                <div key={trip.id} className=\"card\">\n                  <div className=\"flex justify-between items-start mb-4\">\n                    <div>\n                      <h2 className=\"text-xl font-semibold\">\n                        {trip.pickupLocation.name} to {trip.dropoffLocation.name}\n                      </h2>\n                      <p className=\"text-gray-500 dark:text-gray-400\">\n                        {formatDate(trip.departureDate)} • {trip.departureTime}\n                      </p>\n                    </div>\n                    <span\n                      className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(\n                        trip.status\n                      )} bg-opacity-10`}\n                    >\n                      {trip.status.charAt(0).toUpperCase() + trip.status.slice(1)}\n                    </span>\n                  </div>\n                  <div className=\"border-t border-gray-200 dark:border-tertiary pt-4 mt-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <div>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {trip.passengerCount} Passengers\n                        </p>\n                        <p className=\"font-medium\">${trip.price.toFixed(2)}</p>\n                      </div>\n                      <Link\n                        to={`/member/trips/${trip.id}`}\n                        className=\"btn-secondary text-sm\"\n                      >\n                        View Details\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TripsPage; ","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport bookingService, { BookingDetails } from '../../services/bookingService';\nimport fleetService, { Helicopter } from '../../services/fleetService';\n\nconst TripDetailsPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [booking, setBooking] = useState<BookingDetails | null>(null);\n  const [helicopter, setHelicopter] = useState<Helicopter | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchTripDetails = async () => {\n      try {\n        setLoading(true);\n        \n        if (!id) {\n          setError('Booking ID is missing');\n          setLoading(false);\n          return;\n        }\n        \n        const bookingData = await bookingService.getBookingById(id);\n        \n        if (!bookingData) {\n          setError('Booking not found');\n          setLoading(false);\n          return;\n        }\n        \n        setBooking(bookingData);\n        \n        // Fetch helicopter details (in a real app, the booking would have a helicopterId)\n        // For demo, we'll just get the first helicopter\n        const helicopters = await fleetService.getHelicopters();\n        if (helicopters.length > 0) {\n          setHelicopter(helicopters[0]);\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching trip details:', err);\n        setError('Failed to load trip details');\n        setLoading(false);\n      }\n    };\n    \n    fetchTripDetails();\n  }, [id]);\n\n  const formatDate = (dateString: string) => {\n    const options: Intl.DateTimeFormatOptions = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'confirmed':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'completed':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n      </div>\n    );\n  }\n\n  if (error || !booking) {\n    return (\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Error</h2>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-6\">{error || 'Trip not found'}</p>\n        <Link to=\"/trips\" className=\"btn-primary\">\n          Back to Trips\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Trip Details</h1>\n        <Link to=\"/trips\" className=\"btn-secondary\">\n          Back to Trips\n        </Link>\n      </div>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <div className=\"lg:col-span-2\">\n          <div className=\"card mb-8\">\n            <h2 className=\"text-xl font-semibold mb-4\">Flight Information</h2>\n            \n            <div className=\"flex flex-col md:flex-row justify-between mb-6\">\n              <div className=\"mb-4 md:mb-0\">\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Status</p>\n                <span className={`inline-block px-3 py-1 text-sm font-medium rounded-full mt-1 ${getStatusColor(booking.status)}`}>\n                  {booking.status.charAt(0).toUpperCase() + booking.status.slice(1)}\n                </span>\n              </div>\n              \n              <div className=\"mb-4 md:mb-0\">\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Booking ID</p>\n                <p className=\"font-medium\">#{booking.id}</p>\n              </div>\n              \n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Price</p>\n                <p className=\"font-medium text-accent\">${booking.price.toLocaleString()}</p>\n              </div>\n            </div>\n            \n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6 mb-6\">\n              <div className=\"flex flex-col md:flex-row justify-between\">\n                <div className=\"mb-6 md:mb-0 md:w-5/12\">\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">From</p>\n                  <p className=\"font-medium text-lg\">{booking.pickupLocation.name}</p>\n                  <p className=\"text-gray-600 dark:text-gray-300 text-sm\">{booking.pickupLocation.address}</p>\n                </div>\n                \n                <div className=\"flex items-center justify-center mb-6 md:mb-0\">\n                  <div className=\"w-10 h-10 rounded-full bg-accent flex items-center justify-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n                    </svg>\n                  </div>\n                </div>\n                \n                <div className=\"md:w-5/12\">\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">To</p>\n                  <p className=\"font-medium text-lg\">{booking.dropoffLocation.name}</p>\n                  <p className=\"text-gray-600 dark:text-gray-300 text-sm\">{booking.dropoffLocation.address}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Date</p>\n                  <p className=\"font-medium\">{formatDate(booking.departureDate)}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Time</p>\n                  <p className=\"font-medium\">{booking.departureTime}</p>\n                </div>\n                \n                <div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Passengers</p>\n                  <p className=\"font-medium\">{booking.passengerCount} {booking.passengerCount === 1 ? 'person' : 'people'}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"card mb-8\">\n            <h2 className=\"text-xl font-semibold mb-4\">Additional Services</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-gray-50 dark:bg-tertiary rounded-lg p-4 text-center\">\n                <div className=\"mb-2\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 mx-auto text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                </div>\n                <p className=\"font-medium\">Ground Transportation</p>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {booking.addOns?.groundTransportation ? 'Included' : 'Not included'}\n                </p>\n              </div>\n              \n              <div className=\"bg-gray-50 dark:bg-tertiary rounded-lg p-4 text-center\">\n                <div className=\"mb-2\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 mx-auto text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                </div>\n                <p className=\"font-medium\">Catering</p>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {booking.addOns?.catering ? 'Included' : 'Not included'}\n                </p>\n              </div>\n              \n              <div className=\"bg-gray-50 dark:bg-tertiary rounded-lg p-4 text-center\">\n                <div className=\"mb-2\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 mx-auto text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                </div>\n                <p className=\"font-medium\">Concierge Service</p>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {booking.addOns?.conciergeService ? 'Included' : 'Not included'}\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          {booking.specialRequests && (\n            <div className=\"card\">\n              <h2 className=\"text-xl font-semibold mb-4\">Special Requests</h2>\n              <p className=\"text-gray-600 dark:text-gray-300\">{booking.specialRequests}</p>\n            </div>\n          )}\n        </div>\n        \n        <div>\n          {helicopter && (\n            <div className=\"card mb-8\">\n              <h2 className=\"text-xl font-semibold mb-4\">Helicopter</h2>\n              \n              <div className=\"mb-4\">\n                <img \n                  src={helicopter.imageUrl || '/assets/helicopter-placeholder.jpg'} \n                  alt={helicopter.name} \n                  className=\"w-full h-48 object-cover rounded-lg\"\n                />\n              </div>\n              \n              <h3 className=\"font-medium text-lg mb-2\">{helicopter.name}</h3>\n              <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{helicopter.make} {helicopter.model}</p>\n              \n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-500 dark:text-gray-400\">Capacity</span>\n                  <span className=\"font-medium\">{helicopter.capacity} passengers</span>\n                </div>\n                \n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-500 dark:text-gray-400\">Range</span>\n                  <span className=\"font-medium\">{helicopter.range} miles</span>\n                </div>\n                \n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-500 dark:text-gray-400\">Cruise Speed</span>\n                  <span className=\"font-medium\">{helicopter.cruiseSpeed} mph</span>\n                </div>\n                \n                {helicopter.features && helicopter.features.length > 0 && (\n                  <div className=\"pt-3 border-t border-gray-200 dark:border-gray-700\">\n                    <p className=\"text-gray-500 dark:text-gray-400 mb-2\">Amenities</p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {helicopter.features.map((feature, index) => (\n                        <span \n                          key={index} \n                          className=\"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200 px-2 py-1 rounded text-xs\"\n                        >\n                          {feature}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"card\">\n            <h2 className=\"text-xl font-semibold mb-4\">Need Help?</h2>\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n              If you need to make changes to your booking or have any questions, our concierge team is available 24/7.\n            </p>\n            <button className=\"btn-primary w-full\">\n              Contact Concierge\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TripDetailsPage; ","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport bookingService, { BookingDetails } from '../../services/bookingService';\nimport fleetService, { Helicopter, GroundVehicle } from '../../services/fleetService';\n\ninterface DashboardStats {\n  totalBookingsToday: number;\n  pendingBookings: number;\n  activeFleet: number;\n  totalRevenue: number;\n}\n\nconst AdminDashboard: React.FC = () => {\n  const [stats, setStats] = useState<DashboardStats>({\n    totalBookingsToday: 0,\n    pendingBookings: 0,\n    activeFleet: 0,\n    totalRevenue: 0,\n  });\n  const [recentBookings, setRecentBookings] = useState<BookingDetails[]>([]);\n  const [fleetStatus, setFleetStatus] = useState<{\n    helicopters: { status: string; count: number }[];\n    vehicles: { status: string; count: number }[];\n  }>({\n    helicopters: [],\n    vehicles: [],\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        \n        // In a real app, these would be API calls\n        // For now, we'll use mock data\n        \n        // Fetch recent bookings\n        const bookings = await bookingService.getRecentBookings(5);\n        setRecentBookings(bookings);\n        \n        // Fetch fleet status\n        const helicopters = await fleetService.getHelicopters();\n        const vehicles = await fleetService.getGroundVehicles();\n        \n        // Calculate fleet status\n        const helicopterStatus = calculateFleetStatus(helicopters.map(h => h.status));\n        const vehicleStatus = calculateFleetStatus(vehicles.map(v => v.status));\n        \n        setFleetStatus({\n          helicopters: helicopterStatus,\n          vehicles: vehicleStatus,\n        });\n        \n        // Calculate dashboard stats\n        setStats({\n          totalBookingsToday: 8,\n          pendingBookings: bookings.filter((b: BookingDetails) => b.status === 'pending').length,\n          activeFleet: helicopters.filter(h => h.status === 'available').length + \n                      vehicles.filter(v => v.status === 'available').length,\n          totalRevenue: bookings.reduce((sum: number, booking: BookingDetails) => sum + booking.price, 0),\n        });\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n    \n    fetchDashboardData();\n  }, []);\n\n  const calculateFleetStatus = (statusArray: string[]) => {\n    const statusCount: Record<string, number> = {};\n    \n    statusArray.forEach(status => {\n      statusCount[status] = (statusCount[status] || 0) + 1;\n    });\n    \n    return Object.entries(statusCount).map(([status, count]) => ({\n      status,\n      count,\n    }));\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'confirmed':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'completed':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'available':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'in_use':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'maintenance':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'out_of_service':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const options: Intl.DateTimeFormatOptions = {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    };\n    return new Date(dateString).toLocaleString(undefined, options);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Admin Dashboard</h1>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"card\">\n          <div className=\"flex items-center\">\n            <div className=\"rounded-full p-3 bg-green-100 dark:bg-green-900 mr-4\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-green-600 dark:text-green-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n              </svg>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Bookings Today</p>\n              <p className=\"text-2xl font-bold\">{stats.totalBookingsToday}</p>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <div className=\"flex items-center\">\n            <div className=\"rounded-full p-3 bg-yellow-100 dark:bg-yellow-900 mr-4\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-yellow-600 dark:text-yellow-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Pending Bookings</p>\n              <p className=\"text-2xl font-bold\">{stats.pendingBookings}</p>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <div className=\"flex items-center\">\n            <div className=\"rounded-full p-3 bg-blue-100 dark:bg-blue-900 mr-4\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-blue-600 dark:text-blue-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n              </svg>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Active Fleet</p>\n              <p className=\"text-2xl font-bold\">{stats.activeFleet}</p>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <div className=\"flex items-center\">\n            <div className=\"rounded-full p-3 bg-accent bg-opacity-20 mr-4\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Revenue Today</p>\n              <p className=\"text-2xl font-bold\">{formatCurrency(stats.totalRevenue)}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n        <div className=\"card\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-xl font-semibold\">Recent Bookings</h2>\n            <Link to=\"/admin/bookings\" className=\"text-accent hover:text-accent-dark text-sm font-medium\">\n              View All\n            </Link>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-tertiary\">\n              <thead className=\"bg-gray-50 dark:bg-secondary\">\n                <tr>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Route\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Date\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-tertiary divide-y divide-gray-200 dark:divide-gray-700\">\n                {recentBookings.map((booking) => (\n                  <tr key={booking.id}>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium\">{booking.userId}</div>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <div className=\"text-sm\">{booking.pickupLocation.name} to {booking.dropoffLocation.name}</div>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <div className=\"text-sm\">{formatDate(booking.departureDate)}</div>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(booking.status)}`}>\n                        {booking.status.charAt(0).toUpperCase() + booking.status.slice(1)}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-xl font-semibold\">Fleet Status</h2>\n            <Link to=\"/admin/fleet\" className=\"text-accent hover:text-accent-dark text-sm font-medium\">\n              View All\n            </Link>\n          </div>\n          \n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-4\">Helicopters</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {fleetStatus.helicopters.map((item, index) => (\n                <div key={index} className=\"bg-gray-50 dark:bg-tertiary rounded-lg p-4 text-center\">\n                  <span className={`inline-block px-2 py-1 text-xs font-medium rounded-full mb-2 ${getStatusColor(item.status)}`}>\n                    {item.status.replace('_', ' ').charAt(0).toUpperCase() + item.status.replace('_', ' ').slice(1)}\n                  </span>\n                  <p className=\"text-2xl font-bold\">{item.count}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-medium mb-4\">Ground Vehicles</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {fleetStatus.vehicles.map((item, index) => (\n                <div key={index} className=\"bg-gray-50 dark:bg-tertiary rounded-lg p-4 text-center\">\n                  <span className={`inline-block px-2 py-1 text-xs font-medium rounded-full mb-2 ${getStatusColor(item.status)}`}>\n                    {item.status.replace('_', ' ').charAt(0).toUpperCase() + item.status.replace('_', ' ').slice(1)}\n                  </span>\n                  <p className=\"text-2xl font-bold\">{item.count}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"card\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-xl font-semibold\">Quick Actions</h2>\n        </div>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n          <Link to=\"/admin/bookings\" className=\"bg-gray-50 dark:bg-tertiary hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg p-4 flex flex-col items-center text-center transition-colors\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-accent mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n            </svg>\n            <span className=\"font-medium\">Manage Bookings</span>\n          </Link>\n          \n          <Link to=\"/admin/users\" className=\"bg-gray-50 dark:bg-tertiary hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg p-4 flex flex-col items-center text-center transition-colors\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-accent mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n            </svg>\n            <span className=\"font-medium\">Manage Users</span>\n          </Link>\n          \n          <Link to=\"/admin/fleet\" className=\"bg-gray-50 dark:bg-tertiary hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg p-4 flex flex-col items-center text-center transition-colors\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-accent mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n            </svg>\n            <span className=\"font-medium\">Manage Fleet</span>\n          </Link>\n          \n          <Link to=\"/admin/analytics\" className=\"bg-gray-50 dark:bg-tertiary hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg p-4 flex flex-col items-center text-center transition-colors\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-accent mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n            <span className=\"font-medium\">View Analytics</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard; ","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport bookingService, { BookingDetails } from '../../services/bookingService';\n\nconst BookingsManagement: React.FC = () => {\n  const [bookings, setBookings] = useState<BookingDetails[]>([]);\n  const [filteredBookings, setFilteredBookings] = useState<BookingDetails[]>([]);\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [dateFilter, setDateFilter] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        setLoading(true);\n        const data = await bookingService.getAllBookings();\n        setBookings(data);\n        setFilteredBookings(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching bookings:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchBookings();\n  }, []);\n\n  useEffect(() => {\n    // Apply filters\n    let result = [...bookings];\n    \n    // Status filter\n    if (statusFilter !== 'all') {\n      result = result.filter(booking => booking.status === statusFilter);\n    }\n    \n    // Date filter\n    if (dateFilter) {\n      result = result.filter(booking => {\n        const bookingDate = new Date(booking.departureDate).toISOString().split('T')[0];\n        return bookingDate === dateFilter;\n      });\n    }\n    \n    setFilteredBookings(result);\n  }, [bookings, statusFilter, dateFilter]);\n\n  const formatDate = (dateString: string) => {\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'confirmed':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'completed':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    }\n  };\n\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatusFilter(e.target.value);\n  };\n\n  const handleDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDateFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Bookings Management</h1>\n        <button className=\"btn-primary\">\n          Create New Booking\n        </button>\n      </div>\n      \n      <div className=\"card mb-8\">\n        <div className=\"flex flex-col md:flex-row justify-between mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4 md:mb-0\">Filters</h2>\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div>\n              <label htmlFor=\"status-filter\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Status\n              </label>\n              <select\n                id=\"status-filter\"\n                className=\"form-select\"\n                value={statusFilter}\n                onChange={handleStatusChange}\n              >\n                <option value=\"all\">All Statuses</option>\n                <option value=\"pending\">Pending</option>\n                <option value=\"confirmed\">Confirmed</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"cancelled\">Cancelled</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"date-filter\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Departure Date\n              </label>\n              <input\n                type=\"date\"\n                id=\"date-filter\"\n                className=\"form-input\"\n                value={dateFilter}\n                onChange={handleDateChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"card\">\n        <div className=\"overflow-x-auto\">\n          {loading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n            </div>\n          ) : filteredBookings.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500 dark:text-gray-400\">No bookings found matching your filters.</p>\n            </div>\n          ) : (\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-tertiary\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    ID\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Route\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Date\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Price\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-secondary divide-y divide-gray-200 dark:divide-gray-700\">\n                {filteredBookings.map((booking) => (\n                  <tr key={booking.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-primary dark:text-light\">\n                      #{booking.id || ''}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {booking.userId}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {booking.pickupLocation.name} → {booking.dropoffLocation.name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {formatDate(booking.departureDate)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(booking.status)}`}>\n                        {booking.status.charAt(0).toUpperCase() + booking.status.slice(1)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      ${booking.price.toLocaleString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end space-x-3\">\n                        <Link to={`/admin/bookings/${booking.id}`} className=\"text-accent hover:text-accent-dark\">\n                          View\n                        </Link>\n                        <Link to={`/admin/bookings/${booking.id}/edit`} className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\">\n                          Edit\n                        </Link>\n                        <button className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\">\n                          Cancel\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookingsManagement; ","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService, { UserProfile } from '../../services/userService';\n\nconst UserManagement: React.FC = () => {\n  const [users, setUsers] = useState<UserProfile[]>([]);\n  const [filteredUsers, setFilteredUsers] = useState<UserProfile[]>([]);\n  const [membershipFilter, setMembershipFilter] = useState<string>('all');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setLoading(true);\n        const data = await userService.getAllUsers();\n        setUsers(data);\n        setFilteredUsers(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    // Apply filters\n    let result = [...users];\n    \n    // Membership filter\n    if (membershipFilter !== 'all') {\n      result = result.filter(user => user.membershipTier === membershipFilter);\n    }\n    \n    // Search query\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      result = result.filter(user => \n        user.firstName.toLowerCase().includes(query) || \n        user.lastName.toLowerCase().includes(query) || \n        user.email.toLowerCase().includes(query)\n      );\n    }\n    \n    setFilteredUsers(result);\n  }, [users, membershipFilter, searchQuery]);\n\n  const handleMembershipChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setMembershipFilter(e.target.value);\n  };\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const getMembershipColor = (tier: string | undefined) => {\n    if (!tier) return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    \n    switch (tier) {\n      case 'standard':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'premium':\n        return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';\n      case 'elite':\n        return 'bg-accent bg-opacity-20 text-accent dark:bg-accent dark:bg-opacity-30 dark:text-accent-light';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    }\n  };\n\n  const formatDate = (dateString: string | undefined) => {\n    if (!dateString) return 'N/A';\n    \n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">User Management</h1>\n        <button className=\"btn-primary\">\n          Add New User\n        </button>\n      </div>\n      \n      <div className=\"card mb-8\">\n        <div className=\"flex flex-col md:flex-row justify-between mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4 md:mb-0\">Filters</h2>\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div>\n              <label htmlFor=\"membership-filter\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Membership Tier\n              </label>\n              <select\n                id=\"membership-filter\"\n                className=\"form-select\"\n                value={membershipFilter}\n                onChange={handleMembershipChange}\n              >\n                <option value=\"all\">All Tiers</option>\n                <option value=\"standard\">Standard</option>\n                <option value=\"premium\">Premium</option>\n                <option value=\"elite\">Elite</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"search-query\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Search\n              </label>\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"form-input\"\n                placeholder=\"Search by name or email\"\n                value={searchQuery}\n                onChange={handleSearchChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"card\">\n        <div className=\"overflow-x-auto\">\n          {loading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n            </div>\n          ) : filteredUsers.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500 dark:text-gray-400\">No users found matching your filters.</p>\n            </div>\n          ) : (\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-tertiary\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Name\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Email\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Phone\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Membership\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Joined\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-secondary divide-y divide-gray-200 dark:divide-gray-700\">\n                {filteredUsers.map((user) => (\n                  <tr key={user.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-accent bg-opacity-20 flex items-center justify-center\">\n                          <span className=\"text-accent font-medium\">\n                            {user.firstName.charAt(0)}{user.lastName.charAt(0)}\n                          </span>\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-primary dark:text-light\">\n                            {user.firstName} {user.lastName}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {user.email}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {user.phoneNumber || 'N/A'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getMembershipColor(user.membershipTier)}`}>\n                        {user.membershipTier ? user.membershipTier.charAt(0).toUpperCase() + user.membershipTier.slice(1) : 'None'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {formatDate(user.createdAt)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end space-x-3\">\n                        <Link to={`/admin/users/${user.id}`} className=\"text-accent hover:text-accent-dark\">\n                          View\n                        </Link>\n                        <Link to={`/admin/users/${user.id}/edit`} className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\">\n                          Edit\n                        </Link>\n                        <button className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\">\n                          Deactivate\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserManagement; ","import React, { useEffect, useState } from 'react';\nimport fleetService, { Helicopter, GroundVehicle, Vehicle } from '../../services/fleetService';\n\nconst FleetManagement: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'helicopters' | 'vehicles'>('helicopters');\n  const [helicopters, setHelicopters] = useState<Helicopter[]>([]);\n  const [vehicles, setVehicles] = useState<GroundVehicle[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchFleet = async () => {\n      try {\n        setLoading(true);\n        \n        const helicopterData = await fleetService.getHelicopters();\n        setHelicopters(helicopterData);\n        \n        const vehicleData = await fleetService.getGroundVehicles();\n        setVehicles(vehicleData);\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching fleet data:', error);\n        setLoading(false);\n      }\n    };\n    \n    fetchFleet();\n  }, []);\n\n  const getStatusColor = (status: Vehicle['status']) => {\n    switch (status) {\n      case 'available':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'in_use':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'maintenance':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'out_of_service':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Fleet Management</h1>\n        <button className=\"btn-primary\">\n          Add New Vehicle\n        </button>\n      </div>\n      \n      <div className=\"mb-8\">\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <nav className=\"-mb-px flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('helicopters')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'helicopters'\n                  ? 'border-accent text-accent'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n              }`}\n            >\n              Helicopters\n            </button>\n            <button\n              onClick={() => setActiveTab('vehicles')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'vehicles'\n                  ? 'border-accent text-accent'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n              }`}\n            >\n              Ground Vehicles\n            </button>\n          </nav>\n        </div>\n      </div>\n      \n      <div className=\"card\">\n        <div className=\"overflow-x-auto\">\n          {activeTab === 'helicopters' ? (\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-tertiary\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Helicopter\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Model\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Registration\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Capacity\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Range\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-secondary divide-y divide-gray-200 dark:divide-gray-700\">\n                {helicopters.map((helicopter) => (\n                  <tr key={helicopter.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10 rounded-lg bg-gray-100 dark:bg-tertiary flex items-center justify-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-gray-500 dark:text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z\" />\n                          </svg>\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-primary dark:text-light\">\n                            {helicopter.name}\n                          </div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {helicopter.make}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {helicopter.model}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {helicopter.id}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {helicopter.capacity} passengers\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {helicopter.range} miles\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(helicopter.status)}`}>\n                        {helicopter.status.replace('_', ' ').charAt(0).toUpperCase() + helicopter.status.replace('_', ' ').slice(1)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end space-x-3\">\n                        <button className=\"text-accent hover:text-accent-dark\">\n                          View\n                        </button>\n                        <button className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\">\n                          Edit\n                        </button>\n                        <button className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\">\n                          Delete\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-tertiary\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Vehicle\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Model\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    License Plate\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Type\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Capacity\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-secondary divide-y divide-gray-200 dark:divide-gray-700\">\n                {vehicles.map((vehicle) => (\n                  <tr key={vehicle.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10 rounded-lg bg-gray-100 dark:bg-tertiary flex items-center justify-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-gray-500 dark:text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\n                          </svg>\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-primary dark:text-light\">\n                            {vehicle.name}\n                          </div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {vehicle.make}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {vehicle.model}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {vehicle.licensePlate}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {vehicle.type.charAt(0).toUpperCase() + vehicle.type.slice(1)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\n                      {vehicle.capacity} passengers\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(vehicle.status)}`}>\n                        {vehicle.status.replace('_', ' ').charAt(0).toUpperCase() + vehicle.status.replace('_', ' ').slice(1)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end space-x-3\">\n                        <button className=\"text-accent hover:text-accent-dark\">\n                          View\n                        </button>\n                        <button className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\">\n                          Edit\n                        </button>\n                        <button className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\">\n                          Delete\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FleetManagement; ","import React, { useState, useEffect } from 'react';\n\nimport bookingService from '../../services/bookingService';\nimport fleetService from '../../services/fleetService';\nimport userService from '../../services/userService';\n\ninterface AnalyticsData {\n  totalBookings: number;\n  totalRevenue: number;\n  activeUsers: number;\n  fleetUtilization: number;\n  bookingsByStatus: {\n    confirmed: number;\n    pending: number;\n    cancelled: number;\n    completed: number;\n  };\n  revenueByMonth: {\n    month: string;\n    revenue: number;\n  }[];\n  popularRoutes: {\n    route: string;\n    count: number;\n  }[];\n  membershipDistribution: {\n    tier: string;\n    count: number;\n  }[];\n}\n\nconst AnalyticsPage: React.FC = () => {\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null);\n  const [timeRange, setTimeRange] = useState<'week' | 'month' | 'year'>('month');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchAnalyticsData = async () => {\n      try {\n        setLoading(true);\n        \n        // In a real app, this would be an API call with the time range as a parameter\n        // For now, we'll simulate the data\n        \n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        // Mock data\n        const mockData: AnalyticsData = {\n          totalBookings: timeRange === 'week' ? 24 : timeRange === 'month' ? 87 : 1045,\n          totalRevenue: timeRange === 'week' ? 48000 : timeRange === 'month' ? 174000 : 2090000,\n          activeUsers: timeRange === 'week' ? 18 : timeRange === 'month' ? 42 : 156,\n          fleetUtilization: timeRange === 'week' ? 65 : timeRange === 'month' ? 72 : 78,\n          bookingsByStatus: {\n            confirmed: timeRange === 'week' ? 10 : timeRange === 'month' ? 32 : 384,\n            pending: timeRange === 'week' ? 5 : timeRange === 'month' ? 15 : 180,\n            cancelled: timeRange === 'week' ? 2 : timeRange === 'month' ? 8 : 96,\n            completed: timeRange === 'week' ? 7 : timeRange === 'month' ? 32 : 385,\n          },\n          revenueByMonth: [\n            { month: 'Jan', revenue: timeRange === 'year' ? 150000 : 0 },\n            { month: 'Feb', revenue: timeRange === 'year' ? 165000 : 0 },\n            { month: 'Mar', revenue: timeRange === 'year' ? 180000 : 0 },\n            { month: 'Apr', revenue: timeRange === 'year' ? 195000 : 0 },\n            { month: 'May', revenue: timeRange === 'year' ? 210000 : 0 },\n            { month: 'Jun', revenue: timeRange === 'year' ? 225000 : 0 },\n            { month: 'Jul', revenue: timeRange === 'year' ? 240000 : 0 },\n            { month: 'Aug', revenue: timeRange === 'year' ? 255000 : 0 },\n            { month: 'Sep', revenue: timeRange === 'year' ? 270000 : 0 },\n            { month: 'Oct', revenue: timeRange === 'year' ? 285000 : 0 },\n            { month: 'Nov', revenue: timeRange === 'year' ? 300000 : 0 },\n            { month: 'Dec', revenue: timeRange === 'year' ? 315000 : 0 },\n          ],\n          popularRoutes: [\n            { route: 'Manhattan to Hamptons', count: timeRange === 'week' ? 8 : timeRange === 'month' ? 28 : 336 },\n            { route: 'Manhattan to JFK', count: timeRange === 'week' ? 6 : timeRange === 'month' ? 22 : 264 },\n            { route: 'Manhattan to Greenwich', count: timeRange === 'week' ? 5 : timeRange === 'month' ? 18 : 216 },\n            { route: 'Hamptons to Manhattan', count: timeRange === 'week' ? 7 : timeRange === 'month' ? 25 : 300 },\n            { route: 'JFK to Manhattan', count: timeRange === 'week' ? 6 : timeRange === 'month' ? 21 : 252 },\n          ],\n          membershipDistribution: [\n            { tier: 'Platinum', count: timeRange === 'week' ? 5 : timeRange === 'month' ? 12 : 48 },\n            { tier: 'Gold', count: timeRange === 'week' ? 8 : timeRange === 'month' ? 18 : 72 },\n            { tier: 'Silver', count: timeRange === 'week' ? 12 : timeRange === 'month' ? 28 : 112 },\n          ],\n        };\n        \n        setAnalyticsData(mockData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching analytics data:', error);\n        setLoading(false);\n      }\n    };\n    \n    fetchAnalyticsData();\n  }, [timeRange]);\n\n  const handleTimeRangeChange = (range: 'week' | 'month' | 'year') => {\n    setTimeRange(range);\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  if (loading || !analyticsData) {\n    return (\n      <div className=\"flex justify-center items-center h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-accent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Analytics Dashboard</h1>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={() => handleTimeRangeChange('week')}\n            className={`px-4 py-2 rounded-md ${\n              timeRange === 'week'\n                ? 'bg-accent text-primary'\n                : 'bg-gray-200 text-gray-700 dark:bg-tertiary dark:text-gray-300'\n            }`}\n          >\n            Week\n          </button>\n          <button\n            onClick={() => handleTimeRangeChange('month')}\n            className={`px-4 py-2 rounded-md ${\n              timeRange === 'month'\n                ? 'bg-accent text-primary'\n                : 'bg-gray-200 text-gray-700 dark:bg-tertiary dark:text-gray-300'\n            }`}\n          >\n            Month\n          </button>\n          <button\n            onClick={() => handleTimeRangeChange('year')}\n            className={`px-4 py-2 rounded-md ${\n              timeRange === 'year'\n                ? 'bg-accent text-primary'\n                : 'bg-gray-200 text-gray-700 dark:bg-tertiary dark:text-gray-300'\n            }`}\n          >\n            Year\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-2\">Total Bookings</h3>\n          <p className=\"text-3xl font-bold text-accent\">{analyticsData.totalBookings}</p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Last {timeRange}</p>\n        </div>\n        \n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-2\">Total Revenue</h3>\n          <p className=\"text-3xl font-bold text-accent\">{formatCurrency(analyticsData.totalRevenue)}</p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Last {timeRange}</p>\n        </div>\n        \n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-2\">Active Users</h3>\n          <p className=\"text-3xl font-bold text-accent\">{analyticsData.activeUsers}</p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Last {timeRange}</p>\n        </div>\n        \n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-2\">Fleet Utilization</h3>\n          <p className=\"text-3xl font-bold text-accent\">{analyticsData.fleetUtilization}%</p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Last {timeRange}</p>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-4\">Bookings by Status</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between mb-1\">\n                <span>Confirmed</span>\n                <span>{analyticsData.bookingsByStatus.confirmed}</span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-tertiary rounded-full h-2.5\">\n                <div\n                  className=\"bg-green-500 h-2.5 rounded-full\"\n                  style={{\n                    width: `${(analyticsData.bookingsByStatus.confirmed / analyticsData.totalBookings) * 100}%`,\n                  }}\n                ></div>\n              </div>\n            </div>\n            \n            <div>\n              <div className=\"flex justify-between mb-1\">\n                <span>Pending</span>\n                <span>{analyticsData.bookingsByStatus.pending}</span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-tertiary rounded-full h-2.5\">\n                <div\n                  className=\"bg-yellow-500 h-2.5 rounded-full\"\n                  style={{\n                    width: `${(analyticsData.bookingsByStatus.pending / analyticsData.totalBookings) * 100}%`,\n                  }}\n                ></div>\n              </div>\n            </div>\n            \n            <div>\n              <div className=\"flex justify-between mb-1\">\n                <span>Cancelled</span>\n                <span>{analyticsData.bookingsByStatus.cancelled}</span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-tertiary rounded-full h-2.5\">\n                <div\n                  className=\"bg-red-500 h-2.5 rounded-full\"\n                  style={{\n                    width: `${(analyticsData.bookingsByStatus.cancelled / analyticsData.totalBookings) * 100}%`,\n                  }}\n                ></div>\n              </div>\n            </div>\n            \n            <div>\n              <div className=\"flex justify-between mb-1\">\n                <span>Completed</span>\n                <span>{analyticsData.bookingsByStatus.completed}</span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-tertiary rounded-full h-2.5\">\n                <div\n                  className=\"bg-blue-500 h-2.5 rounded-full\"\n                  style={{\n                    width: `${(analyticsData.bookingsByStatus.completed / analyticsData.totalBookings) * 100}%`,\n                  }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-4\">Membership Distribution</h3>\n          <div className=\"space-y-4\">\n            {analyticsData.membershipDistribution.map((item, index) => (\n              <div key={index}>\n                <div className=\"flex justify-between mb-1\">\n                  <span>{item.tier}</span>\n                  <span>{item.count} members</span>\n                </div>\n                <div className=\"w-full bg-gray-200 dark:bg-tertiary rounded-full h-2.5\">\n                  <div\n                    className={`h-2.5 rounded-full ${\n                      item.tier === 'Platinum'\n                        ? 'bg-purple-500'\n                        : item.tier === 'Gold'\n                        ? 'bg-yellow-500'\n                        : 'bg-gray-500'\n                    }`}\n                    style={{\n                      width: `${(item.count / analyticsData.activeUsers) * 100}%`,\n                    }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-4\">Popular Routes</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-tertiary\">\n              <thead>\n                <tr>\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Route\n                  </th>\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Bookings\n                  </th>\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    % of Total\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                {analyticsData.popularRoutes.map((route, index) => (\n                  <tr key={index}>\n                    <td className=\"px-4 py-2 whitespace-nowrap\">{route.route}</td>\n                    <td className=\"px-4 py-2 whitespace-nowrap\">{route.count}</td>\n                    <td className=\"px-4 py-2 whitespace-nowrap\">\n                      {((route.count / analyticsData.totalBookings) * 100).toFixed(1)}%\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <h3 className=\"text-lg font-semibold mb-4\">Revenue Trend</h3>\n          {timeRange === 'year' ? (\n            <div className=\"h-64 flex items-end space-x-2\">\n              {analyticsData.revenueByMonth.map((item, index) => (\n                <div key={index} className=\"flex flex-col items-center flex-1\">\n                  <div\n                    className=\"w-full bg-accent rounded-t\"\n                    style={{\n                      height: `${(item.revenue / 315000) * 100}%`,\n                    }}\n                  ></div>\n                  <span className=\"text-xs mt-2\">{item.month}</span>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"flex justify-center items-center h-64 text-gray-500 dark:text-gray-400\">\n              Revenue trend data is only available for yearly view\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalyticsPage; ","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { login, selectAuthLoading, selectAuthError } from '../../features/shared/auth/authSlice';\n\ninterface LoginFormInputs {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n}\n\nconst Login: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isLoading = useAppSelector(selectAuthLoading);\n  const error = useAppSelector(selectAuthError);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showCredentialsNotice, setShowCredentialsNotice] = useState(false);\n  \n  // Get return URL from location state or default to dashboard\n  const from = (location.state as any)?.from?.pathname || '/member/dashboard';\n  \n  useEffect(() => {\n    // Show credentials notice if it hasn't been shown before\n    const credentialsNoticeShown = localStorage.getItem('credentialsNoticeShown');\n    if (!credentialsNoticeShown) {\n      setShowCredentialsNotice(true);\n      localStorage.setItem('credentialsNoticeShown', 'true');\n    }\n  }, []);\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginFormInputs>({\n    defaultValues: {\n      email: '',\n      password: '',\n      rememberMe: false,\n    },\n  });\n  \n  const onSubmit = async (data: LoginFormInputs) => {\n    try {\n      const resultAction = await dispatch(login({ \n        email: data.email, \n        password: data.password \n      }));\n      \n      if (login.fulfilled.match(resultAction)) {\n        // Redirect to the page they were trying to access or dashboard\n        navigate(from, { replace: true });\n      }\n    } catch (err) {\n      console.error('Login failed:', err);\n    }\n  };\n  \n  return (\n    <div className=\"min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8 bg-light dark:bg-primary\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-primary dark:text-light\">\n          Sign in to your account\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600 dark:text-gray-400\">\n          Or{' '}\n          <Link to=\"/register\" className=\"font-medium text-accent hover:text-accent/80\">\n            create a new account\n          </Link>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-secondary py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {showCredentialsNotice && (\n            <div className=\"mb-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-400 text-blue-800 dark:text-blue-300 rounded p-3\">\n              <div className=\"flex justify-between\">\n                <div>\n                  <p className=\"font-bold mb-2\">Test Accounts:</p>\n                  <p className=\"mb-2\">\n                    <strong>Member Account:</strong><br />\n                    Email: member@flyhelo.one<br />\n                    Password: member123\n                  </p>\n                  <p>\n                    <strong>Guest Account:</strong><br />\n                    Email: guest@flyhelo.one<br />\n                    Password: guest123\n                  </p>\n                </div>\n                <button \n                  onClick={() => setShowCredentialsNotice(false)}\n                  className=\"text-blue-800 dark:text-blue-300 hover:text-blue-600\"\n                >\n                  ✕\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"mb-4 bg-red-50 dark:bg-red-900/20 border border-red-400 text-red-800 dark:text-red-300 rounded p-3\">\n              {error}\n            </div>\n          )}\n          \n          <form className=\"space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Email address\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  className=\"input\"\n                  {...register('email', {\n                    required: 'Email is required',\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: 'Invalid email address',\n                    },\n                  })}\n                />\n                {errors.email && (\n                  <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{errors.email.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                  className=\"input pr-10\"\n                  {...register('password', {\n                    required: 'Password is required',\n                    minLength: {\n                      value: 6,\n                      message: 'Password must be at least 6 characters',\n                    },\n                  })}\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-500\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n                      <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  ) : (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\" />\n                      <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n                    </svg>\n                  )}\n                </button>\n                {errors.password && (\n                  <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{errors.password.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-accent focus:ring-accent border-gray-300 rounded\"\n                  {...register('rememberMe')}\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <Link to=\"/forgot-password\" className=\"font-medium text-accent hover:text-accent/80\">\n                  Forgot your password?\n                </Link>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary dark:bg-accent dark:text-primary hover:bg-primary/90 dark:hover:bg-accent/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent disabled:opacity-50\"\n              >\n                {isLoading ? (\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                ) : null}\n                Sign in\n              </button>\n            </div>\n          </form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300 dark:border-gray-600\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white dark:bg-secondary text-gray-500 dark:text-gray-400\">\n                  Or continue with\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mt-6 grid grid-cols-2 gap-3\">\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-tertiary text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-tertiary/80\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path fillRule=\"evenodd\" d=\"M10 0C4.477 0 0 4.477 0 10c0 4.42 2.865 8.166 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.34-3.369-1.34-.454-1.156-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.087 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.029-2.683-.103-.253-.446-1.27.098-2.647 0 0 .84-.268 2.75 1.026A9.578 9.578 0 0110 4.836c.85.004 1.705.114 2.504.336 1.909-1.294 2.747-1.026 2.747-1.026.546 1.377.203 2.394.1 2.647.64.699 1.028 1.592 1.028 2.683 0 3.842-2.339 4.687-4.566 4.935.359.309.678.919.678 1.852 0 1.336-.012 2.415-.012 2.743 0 .267.18.578.688.48C17.14 18.163 20 14.418 20 10c0-5.523-4.477-10-10-10z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-tertiary text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-tertiary/80\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login; ","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../features/shared/auth/authSlice';\nimport { AppDispatch } from '../../store/index';\n\nconst RegisterPage: React.FC = () => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    agreeToTerms: false,\n  });\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value,\n    });\n    \n    // Clear error when field is edited\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: '',\n      });\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n    \n    if (!formData.firstName.trim()) {\n      newErrors.firstName = 'First name is required';\n    }\n    \n    if (!formData.lastName.trim()) {\n      newErrors.lastName = 'Last name is required';\n    }\n    \n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    \n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n    }\n    \n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    \n    if (!formData.agreeToTerms) {\n      newErrors.agreeToTerms = 'You must agree to the terms and conditions';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // In a real app, this would dispatch a registration action\n      await dispatch(register({\n        email: formData.email,\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n      }));\n      \n      // Redirect to dashboard after successful registration\n      navigate('/member/dashboard');\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setErrors({\n        ...errors,\n        form: 'Registration failed. Please try again.',\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md w-full mx-auto\">\n      <div className=\"text-center mb-8\">\n        <h1 className=\"text-3xl font-bold mb-2\">Create Your Account</h1>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Join HELO Luxury Air Mobility and experience premium travel\n        </p>\n      </div>\n      \n      {errors.form && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {errors.form}\n        </div>\n      )}\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              First Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"firstName\"\n              name=\"firstName\"\n              value={formData.firstName}\n              onChange={handleChange}\n              className={`form-input w-full ${errors.firstName ? 'border-red-500' : ''}`}\n            />\n            {errors.firstName && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.firstName}</p>\n            )}\n          </div>\n          \n          <div>\n            <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Last Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"lastName\"\n              name=\"lastName\"\n              value={formData.lastName}\n              onChange={handleChange}\n              className={`form-input w-full ${errors.lastName ? 'border-red-500' : ''}`}\n            />\n            {errors.lastName && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.lastName}</p>\n            )}\n          </div>\n        </div>\n        \n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n            Email Address\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            className={`form-input w-full ${errors.email ? 'border-red-500' : ''}`}\n          />\n          {errors.email && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\n          )}\n        </div>\n        \n        <div>\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            className={`form-input w-full ${errors.password ? 'border-red-500' : ''}`}\n          />\n          {errors.password && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\n          )}\n        </div>\n        \n        <div>\n          <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n            Confirm Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            value={formData.confirmPassword}\n            onChange={handleChange}\n            className={`form-input w-full ${errors.confirmPassword ? 'border-red-500' : ''}`}\n          />\n          {errors.confirmPassword && (\n            <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword}</p>\n          )}\n        </div>\n        \n        <div className=\"flex items-start\">\n          <div className=\"flex items-center h-5\">\n            <input\n              type=\"checkbox\"\n              id=\"agreeToTerms\"\n              name=\"agreeToTerms\"\n              checked={formData.agreeToTerms}\n              onChange={handleChange}\n              className={`form-checkbox ${errors.agreeToTerms ? 'border-red-500' : ''}`}\n            />\n          </div>\n          <div className=\"ml-3 text-sm\">\n            <label htmlFor=\"agreeToTerms\" className=\"text-gray-700 dark:text-gray-300\">\n              I agree to the <a href=\"#\" className=\"text-accent hover:text-accent-dark\">Terms of Service</a> and <a href=\"#\" className=\"text-accent hover:text-accent-dark\">Privacy Policy</a>\n            </label>\n            {errors.agreeToTerms && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.agreeToTerms}</p>\n            )}\n          </div>\n        </div>\n        \n        <div>\n          <button\n            type=\"submit\"\n            className=\"btn-primary w-full\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Creating Account...' : 'Create Account'}\n          </button>\n        </div>\n      </form>\n      \n      <div className=\"mt-6 text-center\">\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Already have an account?{' '}\n          <Link to=\"/login\" className=\"text-accent hover:text-accent-dark font-medium\">\n            Sign in\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage; ","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../store/index';\n\nconst ForgotPasswordPage: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const [email, setEmail] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const validateForm = (): boolean => {\n    // Simple email validation\n    if (!email) {\n      setError('Email is required');\n      return false;\n    }\n    \n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError('Please enter a valid email address');\n      return false;\n    }\n    \n    setError('');\n    return true;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      // In a real application, you would dispatch an action to handle password reset\n      // For now, we'll just simulate a successful request\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      setSuccess(true);\n    } catch (err) {\n      setError('An error occurred. Please try again later.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div className=\"max-w-md w-full space-y-8 p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md\">\n        <div className=\"text-center\">\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900 dark:text-white\">\n            Check your email\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n            We've sent password reset instructions to {email}\n          </p>\n        </div>\n        <div className=\"mt-6\">\n          <Link\n            to=\"/login\"\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Return to login\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-md w-full space-y-8 p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md\">\n      <div>\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900 dark:text-white\">\n          Reset your password\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600 dark:text-gray-400\">\n          Enter your email address and we'll send you instructions to reset your password.\n        </p>\n      </div>\n      \n      <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n        {error && (\n          <div className=\"bg-red-50 dark:bg-red-900/30 border-l-4 border-red-500 p-4\">\n            <p className=\"text-sm text-red-700 dark:text-red-400\">{error}</p>\n          </div>\n        )}\n        \n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            Email address\n          </label>\n          <div className=\"mt-1\">\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              required\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-900 dark:text-white\"\n              placeholder=\"you@example.com\"\n            />\n          </div>\n        </div>\n\n        <div>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400 disabled:cursor-not-allowed\"\n          >\n            {isSubmitting ? 'Sending...' : 'Send reset instructions'}\n          </button>\n        </div>\n        \n        <div className=\"text-sm text-center\">\n          <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500 dark:text-indigo-400\">\n            Back to login\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPasswordPage; ","import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAppSelector } from '../../store';\nimport { selectIsAuthenticated, selectCurrentUser } from '../../features/shared/auth/authSlice';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  allowedRoles?: ('member' | 'admin' | 'guest')[];\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  children, \n  allowedRoles = ['member', 'admin', 'guest'] \n}) => {\n  const location = useLocation();\n  const isAuthenticated = useAppSelector(selectIsAuthenticated);\n  const currentUser = useAppSelector(selectCurrentUser);\n  \n  // Check if user is authenticated\n  if (!isAuthenticated) {\n    // Redirect to login page with return url\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n  \n  // Check if user has required role\n  if (allowedRoles.length > 0 && currentUser && !allowedRoles.includes(currentUser.role)) {\n    // Redirect based on role\n    if (currentUser.role === 'admin') {\n      return <Navigate to=\"/admin/dashboard\" replace />;\n    } else {\n      return <Navigate to=\"/member/dashboard\" replace />;\n    }\n  }\n  \n  // If authenticated and has required role, render children\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute; ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound: React.FC = () => {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-light dark:bg-primary\">\n      <div className=\"text-center p-8 max-w-md\">\n        <h1 className=\"text-6xl font-bold text-primary dark:text-accent mb-4\">404</h1>\n        <h2 className=\"text-2xl font-semibold text-primary dark:text-light mb-4\">Page Not Found</h2>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-8\">\n          The page you are looking for doesn't exist or has been moved.\n        </p>\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <Link\n            to=\"/\"\n            className=\"btn-primary\"\n          >\n            Return Home\n          </Link>\n          <Link\n            to=\"/member/dashboard\"\n            className=\"btn-secondary\"\n          >\n            Go to Dashboard\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound; ","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\n// Layouts\nimport MemberLayout from './layouts/member/MemberLayout';\nimport AdminLayout from './layouts/admin/AdminLayout';\nimport AuthLayout from './layouts/shared/AuthLayout';\n\n// Member Pages\nimport MemberDashboard from './pages/member/Dashboard';\nimport BookingPage from './pages/member/Booking';\nimport ProfilePage from './pages/member/Profile';\nimport TripsPage from './pages/member/Trips';\nimport TripDetailsPage from './pages/member/TripDetails';\n\n// Admin Pages\nimport AdminDashboard from './pages/admin/Dashboard';\nimport BookingsManagement from './pages/admin/BookingsManagement';\nimport UserManagement from './pages/admin/UserManagement';\nimport FleetManagement from './pages/admin/FleetManagement';\nimport AnalyticsPage from './pages/admin/Analytics';\n\n// Auth Pages\nimport LoginPage from './pages/shared/Login';\nimport RegisterPage from './pages/shared/Register';\nimport ForgotPasswordPage from './pages/shared/ForgotPassword';\n\n// Shared Components\nimport ProtectedRoute from './components/shared/ProtectedRoute';\nimport NotFoundPage from './pages/shared/NotFound';\n\nconst App: React.FC = () => {\n  const [darkMode, setDarkMode] = useState<boolean>(\n    localStorage.getItem('darkMode') === 'true' || true\n  );\n\n  useEffect(() => {\n    // Apply dark mode class to document\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    \n    // Save preference to localStorage\n    localStorage.setItem('darkMode', darkMode.toString());\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Routes>\n          {/* Public routes */}\n          <Route path=\"/\" element={<Navigate to=\"/member/dashboard\" replace />} />\n          \n          {/* Auth routes */}\n          <Route element={<AuthLayout />}>\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/register\" element={<RegisterPage />} />\n            <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n          </Route>\n          \n          {/* Member routes */}\n          <Route\n            path=\"/member\"\n            element={\n              <MemberLayout darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\n            }\n          >\n            <Route\n              path=\"dashboard\"\n              element={\n                <ProtectedRoute allowedRoles={['member', 'admin']}>\n                  <MemberDashboard />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"booking\"\n              element={\n                <ProtectedRoute allowedRoles={['member', 'admin']}>\n                  <BookingPage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"profile\"\n              element={\n                <ProtectedRoute allowedRoles={['member', 'admin']}>\n                  <ProfilePage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"trips\"\n              element={\n                <ProtectedRoute allowedRoles={['member', 'admin']}>\n                  <TripsPage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"trips/:tripId\"\n              element={\n                <ProtectedRoute allowedRoles={['member', 'admin']}>\n                  <TripDetailsPage />\n                </ProtectedRoute>\n              }\n            />\n          </Route>\n          \n          {/* Admin routes */}\n          <Route\n            path=\"/admin\"\n            element={\n              <AdminLayout darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\n            }\n          >\n            <Route\n              path=\"dashboard\"\n              element={\n                <ProtectedRoute allowedRoles={['admin']}>\n                  <AdminDashboard />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"bookings\"\n              element={\n                <ProtectedRoute allowedRoles={['admin']}>\n                  <BookingsManagement />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"users\"\n              element={\n                <ProtectedRoute allowedRoles={['admin']}>\n                  <UserManagement />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"fleet\"\n              element={\n                <ProtectedRoute allowedRoles={['admin']}>\n                  <FleetManagement />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"analytics\"\n              element={\n                <ProtectedRoute allowedRoles={['admin']}>\n                  <AnalyticsPage />\n                </ProtectedRoute>\n              }\n            />\n          </Route>\n          \n          {/* 404 route */}\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}